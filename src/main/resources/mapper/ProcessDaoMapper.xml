<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.common.transaction.dao.ProcessDao">

    <resultMap id="resultMap" type="com.common.transaction.entity.ProcessesEntity">
        <id property="id" column="id" jdbcType="INTEGER" />
        <result property="message_id" column="message_id" jdbcType="INTEGER" />
        <result property="typeCode" column="type" jdbcType="INTEGER" />
        <result property="processor" column="processor" jdbcType="VARCHAR" />
        <result property="data" column="data" javaType="com.alibaba.fastjson.JSONObject" jdbcType="VARCHAR" typeHandler="com.common.transaction.utils.JSONHandler" />
        <result property="tryResult" column="try_result" javaType="com.alibaba.fastjson.JSONObject" jdbcType="VARCHAR" typeHandler="com.common.transaction.utils.JSONHandler" />
        <result property="status" column="status" jdbcType="INTEGER" />
        <result property="createTime" column="created_at" jdbcType="TIMESTAMP" />
        <result property="updateTime" column="updated_at" jdbcType="TIMESTAMP" />
    </resultMap>

    <!-- COIN的基础列名 -->
    <sql id="Base_Column_List">
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
  </sql>

    <sql id="Insert_Column_List">
        id,message_id,type,processor,data,try_result,status,created_at
    </sql>

    <update id="saveOrUpdateProcess" parameterType="com.common.transaction.entity.ProcessesEntity">
        insert into yimq_processes
        (<include refid="Insert_Column_List" />)
        values (
        #{id,jdbcType=INTEGER},#{message_id,jdbcType=INTEGER},#{typeCode,jdbcType=INTEGER},#{processor,jdbcType=VARCHAR},
        #{data,jdbcType=VARCHAR,javaType=com.alibaba.fastjson.JSONObject,typeHandler=com.common.transaction.utils.JSONHandler},
        #{tryResult,jdbcType=VARCHAR,javaType=com.alibaba.fastjson.JSONObject,typeHandler=com.common.transaction.utils.JSONHandler},
        #{status,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP}
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
    </update>


    <select id="selectProcessByIdForUpdate" resultMap="resultMap" >
        select <include refid="Base_Column_List" /> from yimq_processes
        where id = #{id,jdbcType=INTEGER}
        for update
    </select>

    <select id="selectProcessById" resultMap="resultMap" >
        select <include refid="Base_Column_List" /> from yimq_processes
        where id = #{id,jdbcType=INTEGER}
    </select>


</mapper>