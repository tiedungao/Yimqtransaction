2020-03-26 11:10:29  [ main:1 ] - [ ERROR ]  init datasource error, url: jdbc:mysql://127.0.0.1:3306/world
java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:684)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:995)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:991)
	at com.alibaba.druid.pool.xa.DruidXADataSource.getXAConnection(DruidXADataSource.java:44)
	at XADataSourceConfig.getXAResource(XADataSourceConfig.java:53)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.CGLIB$getXAResource$1(<generated>)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0$$FastClassBySpringCGLIB$$aadd993f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.getXAResource(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:537)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:513)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:653)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:239)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at TransactionApplication.main(TransactionApplication.java:10)
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132)
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2121)
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2145)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 56 more
2020-03-26 11:10:29  [ main:1 ] - [ ERROR ]  init datasource error, url: jdbc:mysql://127.0.0.1:3306/world
java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:684)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:995)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:991)
	at com.alibaba.druid.pool.xa.DruidXADataSource.getXAConnection(DruidXADataSource.java:44)
	at XADataSourceConfig.getXAResource(XADataSourceConfig.java:53)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.CGLIB$getXAResource$1(<generated>)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0$$FastClassBySpringCGLIB$$aadd993f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.getXAResource(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:537)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:513)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:653)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:239)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at TransactionApplication.main(TransactionApplication.java:10)
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132)
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2121)
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2145)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 56 more
2020-03-26 11:10:29  [ main:23 ] - [ ERROR ]  {dataSource-1} init error
java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:684)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:995)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:991)
	at com.alibaba.druid.pool.xa.DruidXADataSource.getXAConnection(DruidXADataSource.java:44)
	at XADataSourceConfig.getXAResource(XADataSourceConfig.java:53)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.CGLIB$getXAResource$1(<generated>)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0$$FastClassBySpringCGLIB$$aadd993f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.getXAResource(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:537)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:513)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:653)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:239)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at TransactionApplication.main(TransactionApplication.java:10)
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132)
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2121)
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2145)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 56 more
2020-03-26 11:10:29  [ main:23 ] - [ ERROR ]  {dataSource-1} init error
java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:684)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:995)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:991)
	at com.alibaba.druid.pool.xa.DruidXADataSource.getXAConnection(DruidXADataSource.java:44)
	at XADataSourceConfig.getXAResource(XADataSourceConfig.java:53)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.CGLIB$getXAResource$1(<generated>)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0$$FastClassBySpringCGLIB$$aadd993f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at XADataSourceConfig$$EnhancerBySpringCGLIB$$80e5efe0.getXAResource(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:537)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:513)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:653)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:239)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at TransactionApplication.main(TransactionApplication.java:10)
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132)
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2121)
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2145)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 56 more
2020-03-26 11:10:29  [ main:25 ] - [ INFO ]  {dataSource-1} inited
2020-03-26 11:10:29  [ Druid-ConnectionPool-Create-921640293:31 ] - [ ERROR ]  create connection error, url: jdbc:mysql://127.0.0.1:3306/world, errorCode 0, state 01S00
java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2005)
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132)
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2121)
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2145)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 6 more
2020-03-26 11:10:29  [ Druid-ConnectionPool-Create-921640293:31 ] - [ ERROR ]  create connection error, url: jdbc:mysql://127.0.0.1:3306/world, errorCode 0, state 01S00
java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2005)
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132)
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2121)
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2145)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 6 more
2020-03-26 11:10:29  [ main:33 ] - [ INFO ]  {dataSource-1} closed
2020-03-26 11:13:00  [ main:0 ] - [ INFO ]  {dataSource-1} inited
2020-03-26 11:13:00  [ main:22 ] - [ INFO ]  {dataSource-1} closed
2020-03-26 16:56:57  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 16:56:57  [ http-nio-8080-exec-1:8 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 16:56:57  [ http-nio-8080-exec-1:18 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 16:56:57  [ http-nio-8080-exec-1:104 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,name,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        name=values(name),
        status=values(status)
2020-03-26 16:56:57  [ http-nio-8080-exec-1:122 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 16:56:57  [ http-nio-8080-exec-1:123 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 16:56:57  [ http-nio-8080-exec-1:240 ] - [ ERROR ]  {conn-10001, pstmt-20000} execute error. insert into users
        ( 
        id,name,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        name=values(name),
        status=values(status)
java.sql.SQLSyntaxErrorException: Unknown column 'name' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy70.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.prepare(UserCreateTransactionServiceImpl.java:30)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:53)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 16:56:57  [ http-nio-8080-exec-1:240 ] - [ ERROR ]  {conn-10001, pstmt-20000} execute error. insert into users
        ( 
        id,name,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        name=values(name),
        status=values(status)
java.sql.SQLSyntaxErrorException: Unknown column 'name' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy70.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.prepare(UserCreateTransactionServiceImpl.java:30)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:53)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 16:56:57  [ http-nio-8080-exec-1:258 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 16:56:57  [ http-nio-8080-exec-1:260 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 16:56:57  [ http-nio-8080-exec-1:269 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 16:56:57  [ http-nio-8080-exec-1:272 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 16:56:58  [ http-nio-8080-exec-1:508 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 16:56:58  [ http-nio-8080-exec-1:510 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 16:56:58  [ http-nio-8080-exec-1:511 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:00:10  [ SpringContextShutdownHook:192845 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 17:00:39  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 17:00:39  [ http-nio-8080-exec-2:9 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 17:00:39  [ http-nio-8080-exec-2:20 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:00:39  [ http-nio-8080-exec-2:93 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:00:39  [ http-nio-8080-exec-2:112 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 17:00:39  [ http-nio-8080-exec-2:113 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 17:00:39  [ http-nio-8080-exec-2:154 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 42.0237 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:00:39  [ http-nio-8080-exec-2:155 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 17:00:39  [ http-nio-8080-exec-2:159 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:00:39  [ http-nio-8080-exec-2:163 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7437 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7448 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_time
     )
        values (
            ?,?,?,?,
            ?,?,?,#(createTime,jdbcType=TIMESTAMP)
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7450 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [179, 8, XA, user@user.create, {"username":"maxingyu","status":10}, null, 40]
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7452 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, INTEGER]
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7495 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_time
     )
        values (
            ?,?,?,?,
            ?,?,?,#(createTime,jdbcType=TIMESTAMP)
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        on duplicate key update
        status=values(status),
        try_res' at line 8
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7495 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_time
     )
        values (
            ?,?,?,?,
            ?,?,?,#(createTime,jdbcType=TIMESTAMP)
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        on duplicate key update
        status=values(status),
        try_res' at line 8
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7513 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7519 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7528 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7529 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7719 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7721 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:00:47  [ http-nio-8080-exec-2:7722 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:03:09  [ SpringContextShutdownHook:149756 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 17:03:09  [ SpringContextShutdownHook:149757 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 17:04:56  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 17:04:56  [ http-nio-8080-exec-1:8 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 17:04:56  [ http-nio-8080-exec-1:16 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:04:56  [ http-nio-8080-exec-1:77 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:04:56  [ http-nio-8080-exec-1:94 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 17:04:56  [ http-nio-8080-exec-1:94 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 17:04:56  [ http-nio-8080-exec-1:135 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 41.7199 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:04:56  [ http-nio-8080-exec-1:137 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 17:04:56  [ http-nio-8080-exec-1:141 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:04:56  [ http-nio-8080-exec-1:146 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:05:04  [ http-nio-8080-exec-1:8214 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:05:04  [ http-nio-8080-exec-1:8223 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_time
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:05:04  [ http-nio-8080-exec-1:8235 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 17:05:04  [ http-nio-8080-exec-1:8236 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:05:38  [ SpringContextShutdownHook:42750 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 17:05:38  [ SpringContextShutdownHook:42751 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 17:05:38  [ SpringContextShutdownHook:42752 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 17:06:52  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 17:06:52  [ http-nio-8080-exec-1:7 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 17:06:52  [ http-nio-8080-exec-1:16 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:06:52  [ http-nio-8080-exec-1:77 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:06:52  [ http-nio-8080-exec-1:93 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 17:06:52  [ http-nio-8080-exec-1:94 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 17:06:52  [ http-nio-8080-exec-1:133 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 40.3263 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:06:52  [ http-nio-8080-exec-1:135 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 17:06:52  [ http-nio-8080-exec-1:138 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:06:52  [ http-nio-8080-exec-1:141 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2612 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2620 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_time
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2623 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [179, 8, XA, user@user.create, {"username":"maxingyu","status":10}, null, 40, null]
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2623 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2670 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_time
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2670 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_time
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2688 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2693 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2702 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2704 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2888 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2889 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:06:55  [ http-nio-8080-exec-1:2890 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:09:06  [ SpringContextShutdownHook:134053 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 17:09:06  [ SpringContextShutdownHook:134055 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 17:10:29  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 17:10:29  [ http-nio-8080-exec-2:7 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 17:10:29  [ http-nio-8080-exec-2:15 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:10:29  [ http-nio-8080-exec-2:78 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:10:29  [ http-nio-8080-exec-2:94 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 17:10:29  [ http-nio-8080-exec-2:95 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 17:10:29  [ http-nio-8080-exec-2:132 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 37.8725 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:10:29  [ http-nio-8080-exec-2:134 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 17:10:29  [ http-nio-8080-exec-2:139 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:10:29  [ http-nio-8080-exec-2:146 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7401 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7409 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7411 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [179, 8, XA, user@user.create, {"username":"maxingyu","status":10}, null, 40, null]
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7412 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7454 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLSyntaxErrorException: Unknown column 'create_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7454 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,create_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLSyntaxErrorException: Unknown column 'create_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7474 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7480 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7488 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:10:36  [ http-nio-8080-exec-2:7489 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:10:37  [ http-nio-8080-exec-2:7679 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:10:37  [ http-nio-8080-exec-2:7680 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:10:37  [ http-nio-8080-exec-2:7681 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:11:39  [ SpringContextShutdownHook:70230 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 17:11:39  [ SpringContextShutdownHook:70232 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 17:12:20  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 17:12:20  [ http-nio-8080-exec-2:8 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 17:12:20  [ http-nio-8080-exec-2:18 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:12:20  [ http-nio-8080-exec-2:91 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:12:20  [ http-nio-8080-exec-2:111 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 17:12:20  [ http-nio-8080-exec-2:113 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 17:12:20  [ http-nio-8080-exec-2:150 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 38.9948 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:12:20  [ http-nio-8080-exec-2:151 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 17:12:20  [ http-nio-8080-exec-2:154 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:12:20  [ http-nio-8080-exec-2:158 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1160 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1168 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1170 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [179, 8, XA, user@user.create, {"username":"maxingyu","status":10}, null, 40, null]
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1171 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1216 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLException: Incorrect integer value: 'XA' for column 'type' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1216 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLException: Incorrect integer value: 'XA' for column 'type' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:53)
	at XaTransactionServiceImpl.runTry(XaTransactionServiceImpl.java:55)
	at AccessController.run(AccessController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1234 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1240 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1249 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:12:21  [ http-nio-8080-exec-2:1250 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:12:22  [ http-nio-8080-exec-2:1444 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:12:22  [ http-nio-8080-exec-2:1446 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-26 17:12:22  [ http-nio-8080-exec-2:1447 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:29:48  [ SpringContextShutdownHook:1048354 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 17:29:48  [ SpringContextShutdownHook:1048357 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 17:30:53  [ http-nio-8080-exec-1:1 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 17:30:53  [ http-nio-8080-exec-1:10 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 17:30:53  [ http-nio-8080-exec-1:23 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:30:53  [ http-nio-8080-exec-1:115 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:30:53  [ http-nio-8080-exec-1:139 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 17:30:53  [ http-nio-8080-exec-1:141 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 17:30:53  [ http-nio-8080-exec-1:144 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 4.9646 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:30:53  [ http-nio-8080-exec-1:146 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 17:30:53  [ http-nio-8080-exec-1:151 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:30:53  [ http-nio-8080-exec-1:156 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1539 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1546 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1548 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [179, 8, 30, user@user.create, {"username":"maxingyu","status":10}, null, 40, null]
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1549 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1552 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.935 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1553 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1560 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:30:55  [ http-nio-8080-exec-1:1561 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:39:03  [ SpringContextShutdownHook:489498 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 17:39:03  [ SpringContextShutdownHook:489498 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 17:39:03  [ SpringContextShutdownHook:489499 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 17:39:39  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 17:39:39  [ http-nio-8080-exec-1:8 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 17:39:39  [ http-nio-8080-exec-1:18 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:39:39  [ http-nio-8080-exec-1:88 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:39:39  [ http-nio-8080-exec-1:110 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 17:39:39  [ http-nio-8080-exec-1:111 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 17:39:39  [ http-nio-8080-exec-1:126 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 16.0681 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 17:39:39  [ http-nio-8080-exec-1:128 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 17:39:39  [ http-nio-8080-exec-1:132 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:39:39  [ http-nio-8080-exec-1:137 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13761 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13769 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13771 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [179, 8, 30, user@user.create, {"username":"maxingyu","status":10}, null, 40, null]
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13772 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13776 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 5.3404 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13777 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13784 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 17:39:53  [ http-nio-8080-exec-1:13785 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 17:42:11  [ SpringContextShutdownHook:152196 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 17:42:11  [ SpringContextShutdownHook:152197 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 17:42:11  [ SpringContextShutdownHook:152199 ] - [ DEBUG ]  {conn-10001} closed
2020-03-26 18:01:08  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-26 18:01:08  [ http-nio-8080-exec-1:5 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-26 18:01:08  [ http-nio-8080-exec-1:12 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 18:01:08  [ http-nio-8080-exec-1:71 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 18:01:09  [ http-nio-8080-exec-1:87 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [null, maxingyu, 10]
2020-03-26 18:01:09  [ http-nio-8080-exec-1:88 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-26 18:01:09  [ http-nio-8080-exec-1:101 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.6033 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-26 18:01:09  [ http-nio-8080-exec-1:102 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-26 18:01:09  [ http-nio-8080-exec-1:106 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 18:01:09  [ http-nio-8080-exec-1:109 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 18:01:09  [ http-nio-8080-exec-1:914 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-26 18:01:09  [ http-nio-8080-exec-1:920 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 18:01:09  [ http-nio-8080-exec-1:922 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [179, 8, 30, user@user.create, {"username":"maxingyu","status":10}, null, 40, null]
2020-03-26 18:01:09  [ http-nio-8080-exec-1:923 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-26 18:01:09  [ http-nio-8080-exec-1:925 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.3454 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-26 18:01:09  [ http-nio-8080-exec-1:926 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-26 18:01:09  [ http-nio-8080-exec-1:932 ] - [ DEBUG ]  {conn-10001} commited
2020-03-26 18:01:09  [ http-nio-8080-exec-1:933 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-26 18:21:14  [ SpringContextShutdownHook:1205098 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-26 18:21:14  [ SpringContextShutdownHook:1205098 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-26 18:21:14  [ SpringContextShutdownHook:1205099 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 14:39:44  [ http-nio-8080-exec-3:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 14:39:44  [ http-nio-8080-exec-3:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 14:39:44  [ http-nio-8080-exec-3:8 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:39:44  [ http-nio-8080-exec-3:25 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:39:44  [ http-nio-8080-exec-3:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [180, 10, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:39:44  [ http-nio-8080-exec-3:33 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:39:44  [ http-nio-8080-exec-3:35 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.3826 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:39:44  [ http-nio-8080-exec-3:35 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:39:44  [ http-nio-8080-exec-3:38 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:39:44  [ http-nio-8080-exec-3:39 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:40:10  [ http-nio-8080-exec-4:26493 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:40:10  [ http-nio-8080-exec-4:26494 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [180, 10, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:40:10  [ http-nio-8080-exec-4:26495 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:40:10  [ http-nio-8080-exec-4:26496 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.7916 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:40:10  [ http-nio-8080-exec-4:26496 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:40:10  [ http-nio-8080-exec-4:26497 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:40:10  [ http-nio-8080-exec-4:26498 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:41:14  [ http-nio-8080-exec-7:90752 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:41:14  [ http-nio-8080-exec-7:90753 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [181, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:41:14  [ http-nio-8080-exec-7:90753 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:41:14  [ http-nio-8080-exec-7:90755 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.7239 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:41:14  [ http-nio-8080-exec-7:90755 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:41:14  [ http-nio-8080-exec-7:90758 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:41:14  [ http-nio-8080-exec-7:90758 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:42:08  [ SpringContextShutdownHook:144432 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 14:42:08  [ SpringContextShutdownHook:144432 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 14:42:17  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 14:42:17  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 14:42:17  [ http-nio-8080-exec-2:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:42:17  [ http-nio-8080-exec-2:21 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:42:17  [ http-nio-8080-exec-2:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [181, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:42:17  [ http-nio-8080-exec-2:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:42:17  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.3627 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:42:17  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:42:17  [ http-nio-8080-exec-2:33 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:42:17  [ http-nio-8080-exec-2:33 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:42:17  [ http-nio-8080-exec-2:35 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:42:17  [ http-nio-8080-exec-2:35 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [181, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 40, null]
2020-03-27 14:42:17  [ http-nio-8080-exec-2:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:42:17  [ http-nio-8080-exec-2:38 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.0435 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:42:17  [ http-nio-8080-exec-2:38 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:42:17  [ http-nio-8080-exec-2:42 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:42:17  [ http-nio-8080-exec-2:44 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:42:57  [ http-nio-8080-exec-4:40465 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:42:57  [ http-nio-8080-exec-4:40466 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [182, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:42:57  [ http-nio-8080-exec-4:40467 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:42:57  [ http-nio-8080-exec-4:40469 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.4788 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:42:57  [ http-nio-8080-exec-4:40469 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:42:57  [ http-nio-8080-exec-4:40471 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:42:57  [ http-nio-8080-exec-4:40472 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:45:11  [ SpringContextShutdownHook:174846 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 14:45:11  [ SpringContextShutdownHook:174847 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 14:45:30  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 14:45:30  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 14:45:30  [ http-nio-8080-exec-2:10 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:45:30  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:45:30  [ http-nio-8080-exec-2:35 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [180, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:45:30  [ http-nio-8080-exec-2:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:45:30  [ http-nio-8080-exec-2:39 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.1843 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:45:30  [ http-nio-8080-exec-2:40 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:45:30  [ http-nio-8080-exec-2:41 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:45:30  [ http-nio-8080-exec-2:43 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:45:30  [ http-nio-8080-exec-2:44 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:45:30  [ http-nio-8080-exec-2:44 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [180, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 40, null]
2020-03-27 14:45:30  [ http-nio-8080-exec-2:45 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:45:30  [ http-nio-8080-exec-2:57 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 11.982 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:45:30  [ http-nio-8080-exec-2:58 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:45:30  [ http-nio-8080-exec-2:62 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:45:30  [ http-nio-8080-exec-2:63 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:45:50  [ http-nio-8080-exec-4:20105 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:45:50  [ http-nio-8080-exec-4:20106 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [179, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:45:50  [ http-nio-8080-exec-4:20106 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:45:50  [ http-nio-8080-exec-4:20110 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.7597 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:45:50  [ http-nio-8080-exec-4:20110 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:45:50  [ http-nio-8080-exec-4:20113 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:45:50  [ http-nio-8080-exec-4:20113 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:45:57  [ http-nio-8080-exec-6:26715 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:45:57  [ http-nio-8080-exec-6:26716 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [181, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:45:57  [ http-nio-8080-exec-6:26716 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:45:57  [ http-nio-8080-exec-6:26718 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.9567 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:45:57  [ http-nio-8080-exec-6:26718 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:45:57  [ http-nio-8080-exec-6:26722 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:45:57  [ http-nio-8080-exec-6:26723 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34205 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34205 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [182, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34205 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34206 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.1168 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34207 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34207 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34208 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34208 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34209 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [182, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 40, null]
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34209 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34211 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.3055 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34211 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34215 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:46:04  [ http-nio-8080-exec-8:34216 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41101 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41102 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [183, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41102 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41115 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 12.8748 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41115 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41118 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41118 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41119 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41119 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [183, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 40, null]
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41119 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41122 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.3815 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41122 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41125 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:46:11  [ http-nio-8080-exec-10:41126 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:46:55  [ SpringContextShutdownHook:85244 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 14:46:55  [ SpringContextShutdownHook:85245 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 14:47:08  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 14:47:08  [ http-nio-8080-exec-1:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 14:47:08  [ http-nio-8080-exec-1:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:47:08  [ http-nio-8080-exec-1:19 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:47:08  [ http-nio-8080-exec-1:23 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [180, 11, 30, user@user.create, {"username":"jingchenggong","status":10}, null, 10, null]
2020-03-27 14:47:08  [ http-nio-8080-exec-1:24 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:47:08  [ http-nio-8080-exec-1:37 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.7181 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:47:08  [ http-nio-8080-exec-1:38 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:47:08  [ http-nio-8080-exec-1:42 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:47:08  [ http-nio-8080-exec-1:43 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:55:45  [ http-nio-8080-exec-3:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 14:55:45  [ http-nio-8080-exec-3:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 14:55:45  [ http-nio-8080-exec-3:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:55:45  [ http-nio-8080-exec-3:20 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:55:45  [ http-nio-8080-exec-3:27 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [186, 13, 30, user@user.create, {"username":"lirui","status":10}, null, 10, null]
2020-03-27 14:55:45  [ http-nio-8080-exec-3:27 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:55:45  [ http-nio-8080-exec-3:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.8314 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:55:45  [ http-nio-8080-exec-3:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:55:45  [ http-nio-8080-exec-3:42 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:55:45  [ http-nio-8080-exec-3:43 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:55:59  [ http-nio-8080-exec-3:14115 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:55:59  [ http-nio-8080-exec-3:14117 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [186, 13, 30, user@user.create, {"username":"lirui","status":10}, null, 40, null]
2020-03-27 14:55:59  [ http-nio-8080-exec-3:14118 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:55:59  [ http-nio-8080-exec-3:14121 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.4344 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:55:59  [ http-nio-8080-exec-3:14121 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:55:59  [ http-nio-8080-exec-3:14135 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:55:59  [ http-nio-8080-exec-3:14141 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:56:57  [ SpringContextShutdownHook:71820 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 14:56:57  [ SpringContextShutdownHook:71822 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 14:57:13  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 14:57:13  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 14:57:13  [ http-nio-8080-exec-2:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:57:13  [ http-nio-8080-exec-2:22 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:57:13  [ http-nio-8080-exec-2:27 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [186, 13, 30, user@user.create, {"username":"lirui","status":10}, null, 10, null]
2020-03-27 14:57:13  [ http-nio-8080-exec-2:27 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:57:13  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.7116 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:57:13  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:57:13  [ http-nio-8080-exec-2:34 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:57:13  [ http-nio-8080-exec-2:36 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 14:57:21  [ http-nio-8080-exec-2:8603 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 14:57:21  [ http-nio-8080-exec-2:8605 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [186, 13, 30, user@user.create, {"username":"lirui","status":10}, null, 40, null]
2020-03-27 14:57:21  [ http-nio-8080-exec-2:8606 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 14:57:21  [ http-nio-8080-exec-2:8618 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.0687 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 14:57:21  [ http-nio-8080-exec-2:8619 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 14:57:21  [ http-nio-8080-exec-2:8622 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 14:57:21  [ http-nio-8080-exec-2:8627 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:26:54  [ SpringContextShutdownHook:1780976 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:26:54  [ SpringContextShutdownHook:1780977 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:27:44  [ http-nio-8080-exec-4:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:27:44  [ http-nio-8080-exec-4:1 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:27:44  [ http-nio-8080-exec-4:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:27:44  [ http-nio-8080-exec-4:17 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:27:44  [ http-nio-8080-exec-4:21 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [187, 14, 30, user@user.create, {"username":"hujincheng","status":10}, null, 10, null]
2020-03-27 15:27:44  [ http-nio-8080-exec-4:22 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:27:44  [ http-nio-8080-exec-4:23 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.6578 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:27:44  [ http-nio-8080-exec-4:23 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:27:44  [ http-nio-8080-exec-4:26 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:27:44  [ http-nio-8080-exec-4:27 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:27:44  [ http-nio-8080-exec-4:28 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:27:44  [ http-nio-8080-exec-4:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [187, 14, 30, user@user.create, {"username":"hujincheng","status":10}, null, 40, null]
2020-03-27 15:27:44  [ http-nio-8080-exec-4:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:27:44  [ http-nio-8080-exec-4:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.0032 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:27:44  [ http-nio-8080-exec-4:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:27:44  [ http-nio-8080-exec-4:33 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:27:44  [ http-nio-8080-exec-4:34 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:38:21  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:38:21  [ http-nio-8080-exec-2:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:38:21  [ http-nio-8080-exec-2:7 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:38:21  [ http-nio-8080-exec-2:24 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:38:21  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:38:21  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:38:21  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.579 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:38:21  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:38:21  [ http-nio-8080-exec-2:34 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:38:21  [ http-nio-8080-exec-2:36 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:39:42  [ SpringContextShutdownHook:80961 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:39:42  [ SpringContextShutdownHook:80962 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:40:15  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:40:15  [ http-nio-8080-exec-2:4 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:40:15  [ http-nio-8080-exec-2:8 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:40:15  [ http-nio-8080-exec-2:24 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:40:15  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:40:15  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:40:15  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.5743 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:40:15  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:40:15  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:40:15  [ http-nio-8080-exec-2:33 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:41:24  [ SpringContextShutdownHook:68270 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:41:24  [ SpringContextShutdownHook:68272 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:41:44  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:41:44  [ http-nio-8080-exec-2:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:41:44  [ http-nio-8080-exec-2:8 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:41:44  [ http-nio-8080-exec-2:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:41:44  [ http-nio-8080-exec-2:42 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:41:44  [ http-nio-8080-exec-2:43 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:41:44  [ http-nio-8080-exec-2:47 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 4.7175 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:41:44  [ http-nio-8080-exec-2:48 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:41:44  [ http-nio-8080-exec-2:49 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:41:44  [ http-nio-8080-exec-2:51 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:43:04  [ SpringContextShutdownHook:80899 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:43:04  [ SpringContextShutdownHook:80901 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:43:19  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:43:19  [ http-nio-8080-exec-1:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:43:19  [ http-nio-8080-exec-1:7 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:43:19  [ http-nio-8080-exec-1:25 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:43:19  [ http-nio-8080-exec-1:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:43:19  [ http-nio-8080-exec-1:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:43:19  [ http-nio-8080-exec-1:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.5368 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:43:19  [ http-nio-8080-exec-1:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:43:19  [ http-nio-8080-exec-1:32 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:43:19  [ http-nio-8080-exec-1:33 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:44:10  [ SpringContextShutdownHook:51100 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:44:10  [ SpringContextShutdownHook:51102 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:44:41  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:44:41  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:44:41  [ http-nio-8080-exec-2:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:44:41  [ http-nio-8080-exec-2:24 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:44:41  [ http-nio-8080-exec-2:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:44:41  [ http-nio-8080-exec-2:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:44:41  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.5129 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:44:41  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:44:41  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:44:41  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:45:24  [ SpringContextShutdownHook:42688 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:45:24  [ SpringContextShutdownHook:42689 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:48:15  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:48:15  [ http-nio-8080-exec-1:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:48:15  [ http-nio-8080-exec-1:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:48:15  [ http-nio-8080-exec-1:22 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:48:15  [ http-nio-8080-exec-1:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:48:15  [ http-nio-8080-exec-1:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:48:15  [ http-nio-8080-exec-1:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.7194 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:48:15  [ http-nio-8080-exec-1:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:48:15  [ http-nio-8080-exec-1:32 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:48:15  [ http-nio-8080-exec-1:33 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:49:23  [ http-nio-8080-exec-1:68446 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:49:23  [ http-nio-8080-exec-1:68447 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 40, null]
2020-03-27 15:49:23  [ http-nio-8080-exec-1:68447 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:49:23  [ http-nio-8080-exec-1:68458 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 11.6265 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:49:23  [ http-nio-8080-exec-1:68459 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:49:23  [ http-nio-8080-exec-1:68462 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:49:23  [ http-nio-8080-exec-1:68463 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:49:23  [ SpringContextShutdownHook:68528 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:49:23  [ SpringContextShutdownHook:68530 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:50:50  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:50:50  [ http-nio-8080-exec-2:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:50:50  [ http-nio-8080-exec-2:7 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:50:50  [ http-nio-8080-exec-2:25 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:50:50  [ http-nio-8080-exec-2:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:50:50  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:50:50  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.2406 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:50:50  [ http-nio-8080-exec-2:33 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:50:50  [ http-nio-8080-exec-2:36 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:50:50  [ http-nio-8080-exec-2:38 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:52:02  [ http-nio-8080-exec-3:71925 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:52:02  [ http-nio-8080-exec-3:71926 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [188, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:52:02  [ http-nio-8080-exec-3:71926 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:52:02  [ http-nio-8080-exec-3:71927 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.4238 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:52:02  [ http-nio-8080-exec-3:71928 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:52:02  [ http-nio-8080-exec-3:71928 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:52:02  [ http-nio-8080-exec-3:71929 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:52:46  [ http-nio-8080-exec-5:116313 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:52:46  [ http-nio-8080-exec-5:116314 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [189, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:52:46  [ http-nio-8080-exec-5:116314 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:52:46  [ http-nio-8080-exec-5:116315 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.2538 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:52:46  [ http-nio-8080-exec-5:116315 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:52:46  [ http-nio-8080-exec-5:116318 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:52:46  [ http-nio-8080-exec-5:116318 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:54:12  [ http-nio-8080-exec-5:201845 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:54:12  [ http-nio-8080-exec-5:201846 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [189, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 40, null]
2020-03-27 15:54:12  [ http-nio-8080-exec-5:201846 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:54:12  [ http-nio-8080-exec-5:201859 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.0859 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:54:12  [ http-nio-8080-exec-5:201859 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:54:12  [ http-nio-8080-exec-5:201862 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:54:12  [ http-nio-8080-exec-5:201863 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:54:12  [ SpringContextShutdownHook:201916 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 15:54:12  [ SpringContextShutdownHook:201917 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 15:54:58  [ http-nio-8080-exec-3:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 15:54:58  [ http-nio-8080-exec-3:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 15:54:58  [ http-nio-8080-exec-3:7 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:54:58  [ http-nio-8080-exec-3:18 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:54:58  [ http-nio-8080-exec-3:25 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [190, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 15:54:58  [ http-nio-8080-exec-3:25 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:54:58  [ http-nio-8080-exec-3:27 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.0121 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:54:58  [ http-nio-8080-exec-3:27 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:54:58  [ http-nio-8080-exec-3:30 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:54:58  [ http-nio-8080-exec-3:32 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7874 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7881 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7883 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [null, yiyunyan, 10]
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7884 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7888 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 5.4881 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7889 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7897 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:55:06  [ http-nio-8080-exec-3:7898 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 15:55:40  [ http-nio-8080-exec-3:41366 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 15:55:40  [ http-nio-8080-exec-3:41368 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [190, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 40, null]
2020-03-27 15:55:40  [ http-nio-8080-exec-3:41369 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 15:55:40  [ http-nio-8080-exec-3:41372 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 4.016 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 15:55:40  [ http-nio-8080-exec-3:41373 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 15:55:40  [ http-nio-8080-exec-3:41376 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 15:55:40  [ http-nio-8080-exec-3:41377 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 16:12:31  [ http-nio-8080-exec-4:1052255 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 16:12:31  [ http-nio-8080-exec-4:1052256 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [190, 15, 30, user@user.create, {"username":"yiyunyan","status":10}, null, 10, null]
2020-03-27 16:12:31  [ http-nio-8080-exec-4:1052257 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 16:12:31  [ http-nio-8080-exec-4:1052259 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.5038 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:12:31  [ http-nio-8080-exec-4:1052259 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 16:12:31  [ http-nio-8080-exec-4:1052263 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 16:12:31  [ http-nio-8080-exec-4:1052263 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 16:39:07  [ SpringContextShutdownHook:2649041 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-27 16:39:07  [ SpringContextShutdownHook:2649041 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 16:44:47  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 16:44:47  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 16:44:47  [ http-nio-8080-exec-2:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 16:44:47  [ http-nio-8080-exec-2:21 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:44:47  [ http-nio-8080-exec-2:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 16:44:47  [ http-nio-8080-exec-2:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 16:44:47  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.8744 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:44:47  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 16:44:47  [ http-nio-8080-exec-2:33 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 16:44:47  [ http-nio-8080-exec-2:34 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 16:48:14  [ Druid-ConnectionPool-Create-832320216:206984 ] - [ DEBUG ]  {conn-10002} connected
2020-03-27 16:48:14  [ Druid-ConnectionPool-Create-832320216:206984 ] - [ DEBUG ]  {conn-10002} setAutoCommit false
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206985 ] - [ DEBUG ]  {conn-10002} pool-connect
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206986 ] - [ DEBUG ]  {conn-10002, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206986 ] - [ DEBUG ]  {conn-10002, pstmt-20001} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206986 ] - [ DEBUG ]  {conn-10002, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206989 ] - [ DEBUG ]  {conn-10002, pstmt-20001} executed. 3.2255 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206990 ] - [ DEBUG ]  {conn-10002, pstmt-20001} clearParameters. 
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206991 ] - [ DEBUG ]  {conn-10002} commited
2020-03-27 16:48:14  [ http-nio-8080-exec-5:206991 ] - [ DEBUG ]  {conn-10002} pool-recycle
2020-03-27 16:50:06  [ SpringContextShutdownHook:319034 ] - [ DEBUG ]  {conn-10002, pstmt-20001} closed
2020-03-27 16:50:06  [ SpringContextShutdownHook:319034 ] - [ DEBUG ]  {conn-10002} closed
2020-03-27 16:50:26  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 16:50:26  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 16:50:26  [ http-nio-8080-exec-2:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 16:50:26  [ http-nio-8080-exec-2:22 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:50:26  [ http-nio-8080-exec-2:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 16:50:26  [ http-nio-8080-exec-2:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 16:50:26  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.8008 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:50:26  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 16:50:26  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 16:50:26  [ http-nio-8080-exec-2:33 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 16:58:14  [ SpringContextShutdownHook:468215 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 16:59:10  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 16:59:10  [ http-nio-8080-exec-1:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 16:59:10  [ http-nio-8080-exec-1:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 16:59:10  [ http-nio-8080-exec-1:22 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:59:10  [ http-nio-8080-exec-1:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 16:59:10  [ http-nio-8080-exec-1:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 16:59:10  [ http-nio-8080-exec-1:30 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.8564 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 16:59:10  [ http-nio-8080-exec-1:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 16:59:10  [ http-nio-8080-exec-1:33 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 16:59:10  [ http-nio-8080-exec-1:35 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 17:04:32  [ Druid-ConnectionPool-Create-523428337:322096 ] - [ DEBUG ]  {conn-10002} connected
2020-03-27 17:04:32  [ Druid-ConnectionPool-Create-523428337:322096 ] - [ DEBUG ]  {conn-10002} setAutoCommit false
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322097 ] - [ DEBUG ]  {conn-10002} pool-connect
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322098 ] - [ DEBUG ]  {conn-10002, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322098 ] - [ DEBUG ]  {conn-10002, pstmt-20001} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322099 ] - [ DEBUG ]  {conn-10002, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322101 ] - [ DEBUG ]  {conn-10002, pstmt-20001} executed. 3.103 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322102 ] - [ DEBUG ]  {conn-10002, pstmt-20001} clearParameters. 
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322113 ] - [ DEBUG ]  {conn-10002} commited
2020-03-27 17:04:32  [ http-nio-8080-exec-5:322113 ] - [ DEBUG ]  {conn-10002} pool-recycle
2020-03-27 17:04:46  [ SpringContextShutdownHook:335457 ] - [ DEBUG ]  {conn-10002, pstmt-20001} closed
2020-03-27 17:04:46  [ SpringContextShutdownHook:335458 ] - [ DEBUG ]  {conn-10002} closed
2020-03-27 17:05:20  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 17:05:20  [ http-nio-8080-exec-2:4 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 17:05:20  [ http-nio-8080-exec-2:7 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 17:05:20  [ http-nio-8080-exec-2:24 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:05:20  [ http-nio-8080-exec-2:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 17:05:20  [ http-nio-8080-exec-2:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 17:05:20  [ http-nio-8080-exec-2:31 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.4025 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:05:20  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 17:05:20  [ http-nio-8080-exec-2:33 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 17:05:20  [ http-nio-8080-exec-2:34 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 17:46:25  [ SpringContextShutdownHook:2464434 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 17:52:06  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 17:52:06  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 17:52:06  [ http-nio-8080-exec-2:118 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 17:52:06  [ http-nio-8080-exec-2:133 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:52:06  [ http-nio-8080-exec-2:139 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 17:52:06  [ http-nio-8080-exec-2:139 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 17:52:06  [ http-nio-8080-exec-2:176 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 37.224 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:52:06  [ http-nio-8080-exec-2:177 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 17:52:06  [ http-nio-8080-exec-2:194 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 17:52:06  [ http-nio-8080-exec-2:195 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 17:53:57  [ SpringContextShutdownHook:110911 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 17:53:57  [ SpringContextShutdownHook:110920 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 17:54:16  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 17:54:16  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 17:54:16  [ http-nio-8080-exec-2:113 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 17:54:16  [ http-nio-8080-exec-2:126 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:54:16  [ http-nio-8080-exec-2:132 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 10, null]
2020-03-27 17:54:16  [ http-nio-8080-exec-2:132 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 17:54:17  [ http-nio-8080-exec-2:256 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 124.7373 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:54:17  [ http-nio-8080-exec-2:256 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 17:54:17  [ http-nio-8080-exec-2:270 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 17:54:17  [ http-nio-8080-exec-2:271 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17703 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17707 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17708 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [null, gaotiedun, 10]
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17709 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17738 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 29.5052 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17739 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17769 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 17:54:34  [ http-nio-8080-exec-2:17771 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 17:54:36  [ http-nio-8080-exec-2:19426 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 17:54:36  [ http-nio-8080-exec-2:19428 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123456, 1, 30, user@user.create, {"username":"gaotiedun","status":10}, null, 40, null]
2020-03-27 17:54:36  [ http-nio-8080-exec-2:19429 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 17:54:36  [ http-nio-8080-exec-2:19458 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 29.5421 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 17:54:36  [ http-nio-8080-exec-2:19459 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 17:54:36  [ http-nio-8080-exec-2:19478 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 17:54:36  [ http-nio-8080-exec-2:19479 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:01:03  [ http-nio-8080-exec-7:407153 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 18:01:03  [ http-nio-8080-exec-7:407154 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123457, 2, 30, user@user.create, {"username":"zhangli","status":10}, null, 10, null]
2020-03-27 18:01:03  [ http-nio-8080-exec-7:407154 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 18:01:03  [ http-nio-8080-exec-7:407188 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 34.5627 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 18:01:03  [ http-nio-8080-exec-7:407189 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 18:01:04  [ http-nio-8080-exec-7:407200 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 18:01:04  [ http-nio-8080-exec-7:407201 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:02:49  [ SpringContextShutdownHook:512791 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-27 18:02:49  [ SpringContextShutdownHook:512791 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 18:02:49  [ SpringContextShutdownHook:512804 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 18:03:12  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 18:03:12  [ http-nio-8080-exec-1:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 18:03:13  [ http-nio-8080-exec-1:57 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 18:03:13  [ http-nio-8080-exec-1:73 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 18:03:13  [ http-nio-8080-exec-1:79 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123457, 2, 30, user@user.create, {"username":"zhangli","status":10}, null, 10, null]
2020-03-27 18:03:13  [ http-nio-8080-exec-1:79 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 18:03:13  [ http-nio-8080-exec-1:105 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 26.6662 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 18:03:13  [ http-nio-8080-exec-1:106 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 18:03:13  [ http-nio-8080-exec-1:116 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 18:03:13  [ http-nio-8080-exec-1:117 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10659 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10664 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10666 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [null, zhangli, 10]
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10667 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10692 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 26.7272 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10693 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10738 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 18:03:23  [ http-nio-8080-exec-1:10739 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:03:25  [ http-nio-8080-exec-1:12361 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 18:03:25  [ http-nio-8080-exec-1:12362 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [123457, 2, 30, user@user.create, {"username":"zhangli","status":10}, null, 40, null]
2020-03-27 18:03:25  [ http-nio-8080-exec-1:12363 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 18:03:25  [ http-nio-8080-exec-1:12376 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.506 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 18:03:25  [ http-nio-8080-exec-1:12377 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 18:03:25  [ http-nio-8080-exec-1:12390 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 18:03:25  [ http-nio-8080-exec-1:12391 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:07:47  [ SpringContextShutdownHook:275008 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-27 18:07:47  [ SpringContextShutdownHook:275008 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-27 18:07:47  [ SpringContextShutdownHook:275023 ] - [ DEBUG ]  {conn-10001} closed
2020-03-27 18:21:52  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-27 18:21:52  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-27 18:21:52  [ http-nio-8080-exec-2:7 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 18:21:52  [ http-nio-8080-exec-2:23 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 18:21:52  [ http-nio-8080-exec-2:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [12345759, 2, 30, user@user.create, {"username":"zhenglei","status":10}, null, 10, null]
2020-03-27 18:21:52  [ http-nio-8080-exec-2:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 18:21:52  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.6322 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 18:21:52  [ http-nio-8080-exec-2:32 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 18:21:52  [ http-nio-8080-exec-2:42 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 18:21:52  [ http-nio-8080-exec-2:43 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20004 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20005 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20006 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [null, zhenglei, 10]
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20007 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20009 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 2.6241 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20010 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20019 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20019 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20020 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20020 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [12345759, 2, 30, user@user.create, {"username":"zhenglei","status":10}, null, 40, null]
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20020 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20021 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.0653 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20022 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20023 ] - [ DEBUG ]  {conn-10001} commited
2020-03-27 18:22:12  [ http-nio-8080-exec-2:20023 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-27 18:26:40  [ SpringContextShutdownHook:288098 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-27 18:26:40  [ SpringContextShutdownHook:288098 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 14:57:52  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 14:57:52  [ http-nio-8080-exec-2:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 14:57:52  [ http-nio-8080-exec-2:7 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 14:58:05  [ http-nio-8080-exec-2:13286 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 14:58:05  [ http-nio-8080-exec-2:13302 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1678, 2, 20, user@user.tccTrycreate, {"username":"lirui","status":10}, null, 10, null]
2020-03-30 14:58:05  [ http-nio-8080-exec-2:13304 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 14:58:05  [ http-nio-8080-exec-2:13311 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 8.6428 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 14:58:05  [ http-nio-8080-exec-2:13312 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:01:14  [ http-nio-8080-exec-2:202839 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1678, 2, 20, user@user.tccTrycreate, {"username":"lirui","status":10}, null, 20, null]
2020-03-30 15:01:14  [ http-nio-8080-exec-2:202841 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 15:01:14  [ http-nio-8080-exec-2:202854 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 14.4561 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:01:14  [ http-nio-8080-exec-2:202855 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:01:20  [ http-nio-8080-exec-2:208096 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 15:01:20  [ http-nio-8080-exec-2:208096 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 15:06:28  [ SpringContextShutdownHook:516747 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 15:06:28  [ SpringContextShutdownHook:516748 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 15:08:14  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 15:08:14  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 15:08:14  [ http-nio-8080-exec-2:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 15:08:14  [ http-nio-8080-exec-2:37 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:08:14  [ http-nio-8080-exec-2:43 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367, 2, 20, user@user.tccTrycreate, {"username":"shouji"}, null, 10, null]
2020-03-30 15:08:14  [ http-nio-8080-exec-2:43 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 15:08:14  [ http-nio-8080-exec-2:47 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 4.392 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:08:14  [ http-nio-8080-exec-2:48 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:09:23  [ http-nio-8080-exec-2:69318 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367, 2, 20, user@user.tccTrycreate, {"username":"shouji"}, null, 20, null]
2020-03-30 15:09:23  [ http-nio-8080-exec-2:69319 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 15:09:23  [ http-nio-8080-exec-2:69331 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 12.7365 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:09:23  [ http-nio-8080-exec-2:69331 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:09:23  [ http-nio-8080-exec-2:69335 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 15:09:23  [ http-nio-8080-exec-2:69336 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 15:10:02  [ SpringContextShutdownHook:108457 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 15:10:02  [ SpringContextShutdownHook:108458 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 15:15:08  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 15:15:08  [ http-nio-8080-exec-1:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 15:15:08  [ http-nio-8080-exec-1:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 15:15:08  [ http-nio-8080-exec-1:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:15:08  [ http-nio-8080-exec-1:42 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367, 2, 20, user@user.tccTryCreate, {"username":"yanyaoshui"}, null, 10, null]
2020-03-30 15:15:08  [ http-nio-8080-exec-1:42 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 15:15:08  [ http-nio-8080-exec-1:45 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.3904 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:15:08  [ http-nio-8080-exec-1:46 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:15:54  [ http-nio-8080-exec-1:46113 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 15:15:54  [ http-nio-8080-exec-1:46114 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [null, yanyaoshui, 0]
2020-03-30 15:15:54  [ http-nio-8080-exec-1:46115 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, VARCHAR, INTEGER]
2020-03-30 15:15:54  [ http-nio-8080-exec-1:46153 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 38.7914 millis. insert into users
        ( 
        id,username,status
     )
        values (
            ?,?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 15:15:54  [ http-nio-8080-exec-1:46155 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54303 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367, 2, 20, user@user.tccTryCreate, {"username":"yanyaoshui"}, null, 20, null]
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54304 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, OTHER, INTEGER, TIMESTAMP]
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54314 ] - [ ERROR ]  {conn-10001, pstmt-20000} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Cannot create a JSON value from a string with CHARACTER SET 'binary'.
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:70)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:40)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$da5c9ec4.runTry(<generated>)
	at AccessController.run(AccessController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54314 ] - [ ERROR ]  {conn-10001, pstmt-20000} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Cannot create a JSON value from a string with CHARACTER SET 'binary'.
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:70)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:40)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$da5c9ec4.runTry(<generated>)
	at AccessController.run(AccessController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54318 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54318 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54376 ] - [ ERROR ]   save or update process record happen exception !
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54376 ] - [ ERROR ]   save or update process record happen exception !
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54379 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 15:16:02  [ http-nio-8080-exec-1:54380 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 15:17:33  [ SpringContextShutdownHook:145219 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 15:17:33  [ SpringContextShutdownHook:145220 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 15:28:16  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 15:28:16  [ http-nio-8080-exec-1:5 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 15:28:16  [ http-nio-8080-exec-1:9 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 15:28:16  [ http-nio-8080-exec-1:38 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:28:16  [ http-nio-8080-exec-1:44 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367, 2, 20, user@user.tccTryCreate, {"username":"xialuo"}, null, 10, null]
2020-03-30 15:28:16  [ http-nio-8080-exec-1:45 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 15:28:16  [ http-nio-8080-exec-1:47 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.8213 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:28:16  [ http-nio-8080-exec-1:48 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:28:28  [ http-nio-8080-exec-1:11988 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into users
        ( 
        id,username,status,create_at,update_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 15:28:28  [ http-nio-8080-exec-1:11989 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [null, xialuo, 0, 2020-03-30 15:28:27, 2020-03-30 15:28:27]
2020-03-30 15:28:28  [ http-nio-8080-exec-1:11990 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 15:28:28  [ http-nio-8080-exec-1:12037 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into users
        ( 
        id,username,status,create_at,update_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
java.sql.SQLSyntaxErrorException: Unknown column 'create_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy72.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.tccTryCreate(UserCreateTransactionServiceImpl.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at TransactionService.prepare(TransactionService.java:94)
	at TccTransactionServiceImpl.prepare(TccTransactionServiceImpl.java:63)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:38)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$2221a44a.runTry(<generated>)
	at AccessController.run(AccessController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 15:28:28  [ http-nio-8080-exec-1:12037 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into users
        ( 
        id,username,status,create_at,update_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
java.sql.SQLSyntaxErrorException: Unknown column 'create_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy72.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.tccTryCreate(UserCreateTransactionServiceImpl.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at TransactionService.prepare(TransactionService.java:94)
	at TccTransactionServiceImpl.prepare(TccTransactionServiceImpl.java:63)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:38)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$2221a44a.runTry(<generated>)
	at AccessController.run(AccessController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 15:28:28  [ http-nio-8080-exec-1:12055 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 15:28:28  [ http-nio-8080-exec-1:12056 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 15:28:53  [ http-nio-8080-exec-1:36907 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 15:28:53  [ http-nio-8080-exec-1:36908 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 15:28:53  [ SpringContextShutdownHook:36983 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 15:28:53  [ SpringContextShutdownHook:36984 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 15:30:40  [ http-nio-8080-exec-3:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 15:30:40  [ http-nio-8080-exec-3:11 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 15:30:40  [ http-nio-8080-exec-3:19 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 15:30:40  [ http-nio-8080-exec-3:65 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:30:40  [ http-nio-8080-exec-3:72 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367, 2, 20, user@user.tccTryCreate, {"username":"shengrika"}, null, 10, null]
2020-03-30 15:30:40  [ http-nio-8080-exec-3:72 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 15:30:40  [ http-nio-8080-exec-3:75 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.1742 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 15:30:40  [ http-nio-8080-exec-3:76 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5400 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5402 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [null, shengrika, 0, 2020-03-30 15:30:45, 2020-03-30 15:30:45]
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5403 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5407 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 5.1534 millis. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5438 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5442 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [GENERATED_KEY]
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5453 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [18]
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5456 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-03-30 15:30:46  [ http-nio-8080-exec-3:5461 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 15:31:00  [ http-nio-8080-exec-3:19951 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367, 2, 20, user@user.tccTryCreate, {"username":"shengrika"}, null, 20, null]
2020-03-30 15:31:00  [ http-nio-8080-exec-3:19952 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, OTHER, INTEGER, TIMESTAMP]
2020-03-30 15:31:00  [ http-nio-8080-exec-3:19964 ] - [ ERROR ]  {conn-10001, pstmt-20000} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Cannot create a JSON value from a string with CHARACTER SET 'binary'.
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:70)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:40)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$f04732f1.runTry(<generated>)
	at AccessController.run(AccessController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 15:31:00  [ http-nio-8080-exec-3:19964 ] - [ ERROR ]  {conn-10001, pstmt-20000} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Cannot create a JSON value from a string with CHARACTER SET 'binary'.
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:70)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:40)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$f04732f1.runTry(<generated>)
	at AccessController.run(AccessController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 15:31:00  [ http-nio-8080-exec-3:19969 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 15:31:00  [ http-nio-8080-exec-3:19970 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 15:31:00  [ http-nio-8080-exec-3:20012 ] - [ ERROR ]   save or update process record happen exception !
2020-03-30 15:31:00  [ http-nio-8080-exec-3:20012 ] - [ ERROR ]   save or update process record happen exception !
2020-03-30 15:31:00  [ http-nio-8080-exec-3:20014 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 15:31:00  [ http-nio-8080-exec-3:20016 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 17:33:11  [ SpringContextShutdownHook:7350494 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 17:33:11  [ SpringContextShutdownHook:7350496 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 19:11:15  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 19:11:15  [ http-nio-8080-exec-1:6 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 19:11:15  [ http-nio-8080-exec-1:14 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1150 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1159 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367]
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1160 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1193 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 33.8683 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1197 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1202 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1215 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Result: [1367, 2, 20, user@user.tccTrycreate, {"username": "shouji"}, null, 10, null, null]
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1225 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-03-30 19:11:16  [ http-nio-8080-exec-1:1226 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 19:11:20  [ http-nio-8080-exec-1:4427 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 19:11:20  [ http-nio-8080-exec-1:4428 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 19:12:41  [ SpringContextShutdownHook:86123 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 19:12:41  [ SpringContextShutdownHook:86124 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 19:13:15  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 19:13:15  [ http-nio-8080-exec-1:5 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 19:13:15  [ http-nio-8080-exec-1:13 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1556 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1565 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1367]
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1566 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1602 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 36.3664 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1606 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1611 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1626 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Result: [1367, 2, 20, user@user.tccTrycreate, {"username": "shouji"}, null, 10, null, null]
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1632 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-03-30 19:13:17  [ http-nio-8080-exec-1:1633 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 19:15:24  [ http-nio-8080-exec-1:128558 ] - [ ERROR ]   tcc transaction handler happen exception. status is PREPARING
2020-03-30 19:15:24  [ http-nio-8080-exec-1:128558 ] - [ ERROR ]   tcc transaction handler happen exception. status is PREPARING
2020-03-30 19:15:24  [ http-nio-8080-exec-1:128560 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 19:15:24  [ http-nio-8080-exec-1:128561 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158659 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158661 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158662 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368, 2, 20, user@user.info, {"username":"shancun"}, null, 10, null]
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158663 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158665 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 2.6037 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158665 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158666 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158667 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158667 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.1383 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158668 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50001} open
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158668 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50001} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158668 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50001} Result: [1368, 2, 20, user@user.info, {"username": "shancun"}, null, 10, null, null]
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158669 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50001} closed
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158669 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158673 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 19:15:54  [ http-nio-8080-exec-4:158673 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223057 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223058 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368, 2, 20, user@user.tccRunTry, {"username":"shancun"}, null, 10, null]
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223059 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223070 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 11.362 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223070 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223071 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223071 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223072 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.1101 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223072 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} open
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223072 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223073 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} Result: [1368, 2, 20, user@user.tccRunTry, {"username": "shancun"}, null, 10, null, null]
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223073 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} closed
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223074 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223075 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 19:16:58  [ http-nio-8080-exec-6:223076 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330320 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330322 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368, 2, 20, user@user.tccRunTry, {"username":"shancun"}, null, 10, null]
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330323 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330326 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.4947 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330327 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330328 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330329 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330331 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.1114 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330332 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} open
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330334 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330336 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} Result: [1368, 2, 20, user@user.tccRunTry, {"username": "shancun"}, null, 10, null, null]
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330341 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} closed
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330342 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330352 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 19:18:45  [ http-nio-8080-exec-8:330353 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440050 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440051 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368, 2, 20, user@user.tccTryCreate, {"username":"shancun"}, null, 10, null]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440052 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, INTEGER, INTEGER, TIMESTAMP]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440063 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 12.1532 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440064 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440064 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440064 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440065 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.1027 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440066 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} open
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440066 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440066 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} Result: [1368, 2, 20, user@user.tccTryCreate, {"username": "shancun"}, null, 10, null, null]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440067 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} closed
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440067 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440071 ] - [ DEBUG ]  {conn-10001, pstmt-20002} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440071 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [null, shancun, 0, 2020-03-30 19:20:35, 2020-03-30 19:20:35]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440072 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440074 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 2.9965 millis. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440075 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} open
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440076 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} Header: [GENERATED_KEY]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440078 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} Result: [19]
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440078 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} closed
2020-03-30 19:20:35  [ http-nio-8080-exec-10:440079 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442672 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368, 2, 20, user@user.tccTryCreate, {"username":"shancun"}, null, 20, null]
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442673 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, OTHER, INTEGER, TIMESTAMP]
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442703 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Cannot create a JSON value from a string with CHARACTER SET 'binary'.
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:77)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:49)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$40fa33c9.runTry(<generated>)
	at AccessController.run(AccessController.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442703 ] - [ ERROR ]  {conn-10001, pstmt-20001} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,?,?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Cannot create a JSON value from a string with CHARACTER SET 'binary'.
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TransactionService.saveProcessRecord(TransactionService.java:77)
	at TccTransactionServiceImpl.runTry(TccTransactionServiceImpl.java:49)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$40fa33c9.runTry(<generated>)
	at AccessController.run(AccessController.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442720 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442721 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442936 ] - [ ERROR ]   save or update process record happen exception !
2020-03-30 19:20:38  [ http-nio-8080-exec-10:442936 ] - [ ERROR ]   save or update process record happen exception !
2020-03-30 19:20:40  [ http-nio-8080-exec-10:444945 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 19:20:40  [ http-nio-8080-exec-10:444946 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 19:54:12  [ SpringContextShutdownHook:2456816 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 19:54:12  [ SpringContextShutdownHook:2456817 ] - [ DEBUG ]  {conn-10001, pstmt-20002} closed
2020-03-30 19:54:12  [ SpringContextShutdownHook:2456817 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 20:02:06  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 20:02:06  [ http-nio-8080-exec-1:6 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 20:02:06  [ http-nio-8080-exec-1:13 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:02:06  [ http-nio-8080-exec-1:133 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:02:06  [ http-nio-8080-exec-1:164 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"shancun\"}"
2020-03-30 20:02:06  [ http-nio-8080-exec-1:167 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", null, 10, null]
2020-03-30 20:02:06  [ http-nio-8080-exec-1:168 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:02:06  [ http-nio-8080-exec-1:171 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.1614 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:02:06  [ http-nio-8080-exec-1:172 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:02:06  [ http-nio-8080-exec-1:182 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:02:06  [ http-nio-8080-exec-1:183 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:02:06  [ http-nio-8080-exec-1:183 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:02:06  [ http-nio-8080-exec-1:216 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 32.8659 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:02:06  [ http-nio-8080-exec-1:219 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-03-30 20:02:06  [ http-nio-8080-exec-1:224 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:02:06  [ http-nio-8080-exec-1:236 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", null, 10, null, null]
2020-03-30 20:02:06  [ http-nio-8080-exec-1:309 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-03-30 20:02:06  [ http-nio-8080-exec-1:310 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35420 ] - [ DEBUG ]  {conn-10001, pstmt-20002} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35422 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [null, shancun, 0, 2020-03-30 20:02:06, 2020-03-30 20:02:06]
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35423 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35425 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 2.917 millis. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35426 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} open
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35427 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} Header: [GENERATED_KEY]
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35432 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} Result: [1]
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35435 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} closed
2020-03-30 20:02:42  [ http-nio-8080-exec-1:35436 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:03:01  [ http-nio-8080-exec-1:55056 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"shancun\"}"
2020-03-30 20:03:01  [ http-nio-8080-exec-1:55147 ] - [ INFO ]  >>>> json handler string:{} <<<<{"createdAt":"2020-03-30 20:02:06","id":1,"status":0,"updatedAt":"2020-03-30 20:02:06","username":"shancun"}
2020-03-30 20:03:01  [ http-nio-8080-exec-1:55148 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"createdAt":"2020-03-30 20:02:06","id":1,"status":0,"updatedAt":"2020-03-30 20:02:06","username":"shancun"}, 20, null]
2020-03-30 20:03:01  [ http-nio-8080-exec-1:55149 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:03:01  [ http-nio-8080-exec-1:55151 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.4168 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:03:01  [ http-nio-8080-exec-1:55152 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:03:03  [ http-nio-8080-exec-1:57153 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 20:03:03  [ http-nio-8080-exec-1:57154 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:04:22  [ http-nio-8080-exec-5:135707 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141094 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141095 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141097 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.3732 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141098 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50002} open
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141099 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50002} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141100 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50002} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141105 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50002} closed
2020-03-30 20:04:27  [ http-nio-8080-exec-5:141106 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:05:22  [ http-nio-8080-exec-5:196143 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 20:05:22  [ http-nio-8080-exec-5:196143 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:05:40  [ http-nio-8080-exec-7:213836 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219891 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219891 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219892 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 1.5208 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219893 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50003} open
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219893 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50003} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219893 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50003} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219894 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50003} closed
2020-03-30 20:05:46  [ http-nio-8080-exec-7:219894 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:10:12  [ http-nio-8080-exec-7:486226 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 20:10:12  [ http-nio-8080-exec-7:486227 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:10:12  [ SpringContextShutdownHook:486310 ] - [ DEBUG ]  {conn-10001, pstmt-20002} closed
2020-03-30 20:10:12  [ SpringContextShutdownHook:486310 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 20:10:12  [ SpringContextShutdownHook:486310 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 20:10:12  [ SpringContextShutdownHook:486311 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 20:10:44  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 20:10:44  [ http-nio-8080-exec-1:1 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 20:10:44  [ http-nio-8080-exec-1:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26149 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26159 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26160 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26196 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 37.0555 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26200 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26205 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26217 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26298 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-03-30 20:11:10  [ http-nio-8080-exec-1:26299 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37945 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37946 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37947 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37949 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.1864 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37956 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37957 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37959 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37962 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-03-30 20:11:22  [ http-nio-8080-exec-1:37963 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:11:36  [ http-nio-8080-exec-1:51926 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 20:11:36  [ http-nio-8080-exec-1:51926 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:12:34  [ SpringContextShutdownHook:109699 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 20:12:34  [ SpringContextShutdownHook:109700 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 20:12:34  [ SpringContextShutdownHook:109701 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 20:13:37  [ http-nio-8080-exec-1:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 20:13:37  [ http-nio-8080-exec-1:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 20:13:37  [ http-nio-8080-exec-1:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:13:47  [ http-nio-8080-exec-1:9959 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:13:47  [ http-nio-8080-exec-1:9963 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 20:13:47  [ http-nio-8080-exec-1:9963 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 20:13:47  [ http-nio-8080-exec-1:9973 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 9.837 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:13:47  [ http-nio-8080-exec-1:9976 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-03-30 20:13:47  [ http-nio-8080-exec-1:9978 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:13:47  [ http-nio-8080-exec-1:9982 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:13:47  [ http-nio-8080-exec-1:10006 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-03-30 20:13:47  [ http-nio-8080-exec-1:10006 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16867 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16869 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16869 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16872 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 2.8962 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16877 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16879 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16880 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16883 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-03-30 20:13:53  [ http-nio-8080-exec-1:16884 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86104 ] - [ DEBUG ]  {conn-10001, pstmt-20002} created. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86106 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [1]
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86108 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER]
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86111 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 5.2364 millis. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86113 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} open
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86113 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} Header: [id, username, status, created_at, updated_at]
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86118 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} Result: [1, shancun, 0, 2020-03-31 04:02:06.0, 2020-03-31 04:02:06.0]
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86121 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} closed
2020-03-30 20:15:03  [ http-nio-8080-exec-1:86123 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178097 ] - [ DEBUG ]  {conn-10001, pstmt-20003} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178101 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Parameters : [1, shancun, 1, null, null]
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178102 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Types : [INTEGER, VARCHAR, INTEGER, TIMESTAMP, TIMESTAMP]
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178105 ] - [ DEBUG ]  {conn-10001, pstmt-20003} executed. 4.0788 millis. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178107 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} open
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178109 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} Header: [GENERATED_KEY]
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178114 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} Result: [1]
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178117 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} closed
2020-03-30 20:16:35  [ http-nio-8080-exec-1:178118 ] - [ DEBUG ]  {conn-10001, pstmt-20003} clearParameters. 
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188540 ] - [ DEBUG ]  {conn-10001, pstmt-20004} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188545 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"shancun\"}"
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188546 ] - [ DEBUG ]  {conn-10001, pstmt-20004} Parameters : [1368, 2, 20, user@user.tccTryConfirm, "{\"username\":\"shancun\"}", null, null, null]
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188546 ] - [ DEBUG ]  {conn-10001, pstmt-20004} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188558 ] - [ ERROR ]  {conn-10001, pstmt-20004} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLIntegrityConstraintViolationException: Column 'status' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:79)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$85083ee1.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188558 ] - [ ERROR ]  {conn-10001, pstmt-20004} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLIntegrityConstraintViolationException: Column 'status' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:79)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$85083ee1.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188560 ] - [ DEBUG ]  {conn-10001, pstmt-20004} clearParameters. 
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188561 ] - [ DEBUG ]  {conn-10001, pstmt-20004} closed
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188613 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 20:16:45  [ http-nio-8080-exec-1:188614 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315990 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315992 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315992 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315994 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.9448 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315994 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} open
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315995 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315995 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315996 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50004} closed
2020-03-30 20:18:53  [ http-nio-8080-exec-4:315997 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320247 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320248 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320251 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.7911 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320252 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50005} open
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320253 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50005} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320255 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50005} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320258 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50005} closed
2020-03-30 20:18:57  [ http-nio-8080-exec-4:320259 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331442 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [1]
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331443 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER]
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331445 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 2.2483 millis. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331445 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50006} open
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331446 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50006} Header: [id, username, status, created_at, updated_at]
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331446 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50006} Result: [1, shancun, 0, 2020-03-31 04:02:06.0, 2020-03-31 04:02:06.0]
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331447 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50006} closed
2020-03-30 20:19:08  [ http-nio-8080-exec-4:331447 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358319 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Parameters : [1, shancun, 1, null, null]
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358320 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Types : [INTEGER, VARCHAR, INTEGER, TIMESTAMP, TIMESTAMP]
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358332 ] - [ DEBUG ]  {conn-10001, pstmt-20003} executed. 13.6035 millis. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358334 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50007} open
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358334 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50007} Header: [GENERATED_KEY]
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358335 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50007} Result: [1]
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358336 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50007} closed
2020-03-30 20:19:35  [ http-nio-8080-exec-4:358337 ] - [ DEBUG ]  {conn-10001, pstmt-20003} clearParameters. 
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420264 ] - [ DEBUG ]  {conn-10001, pstmt-20005} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420265 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"shancun\"}"
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420265 ] - [ DEBUG ]  {conn-10001, pstmt-20005} Parameters : [1368, 2, 20, user@user.tccTryConfirm, "{\"username\":\"shancun\"}", null, null, null]
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420265 ] - [ DEBUG ]  {conn-10001, pstmt-20005} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420266 ] - [ ERROR ]  {conn-10001, pstmt-20005} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLIntegrityConstraintViolationException: Column 'status' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:79)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$85083ee1.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420266 ] - [ ERROR ]  {conn-10001, pstmt-20005} execute error. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
java.sql.SQLIntegrityConstraintViolationException: Column 'status' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy68.saveOrUpdateSubTask(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.saveOrUpdateSubTask(Unknown Source)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:79)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$85083ee1.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420267 ] - [ DEBUG ]  {conn-10001, pstmt-20005} clearParameters. 
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420267 ] - [ DEBUG ]  {conn-10001, pstmt-20005} closed
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420280 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 20:20:37  [ http-nio-8080-exec-4:420281 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:20:37  [ SpringContextShutdownHook:420358 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 20:20:37  [ SpringContextShutdownHook:420359 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 20:20:37  [ SpringContextShutdownHook:420359 ] - [ DEBUG ]  {conn-10001, pstmt-20002} closed
2020-03-30 20:20:37  [ SpringContextShutdownHook:420359 ] - [ DEBUG ]  {conn-10001, pstmt-20003} closed
2020-03-30 20:20:37  [ SpringContextShutdownHook:420360 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 20:21:11  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 20:21:11  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 20:21:11  [ http-nio-8080-exec-2:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:21:11  [ http-nio-8080-exec-2:41 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:21:11  [ http-nio-8080-exec-2:44 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 20:21:11  [ http-nio-8080-exec-2:45 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 20:21:11  [ http-nio-8080-exec-2:56 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 11.7643 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:21:11  [ http-nio-8080-exec-2:59 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-03-30 20:21:11  [ http-nio-8080-exec-2:60 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:21:11  [ http-nio-8080-exec-2:65 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:21:11  [ http-nio-8080-exec-2:93 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-03-30 20:21:11  [ http-nio-8080-exec-2:94 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4585 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4586 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4587 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4590 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.4073 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4596 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4597 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4599 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4602 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4604 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4606 ] - [ DEBUG ]  {conn-10001, pstmt-20002} created. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4607 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [1]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4608 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4611 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 4.3678 millis. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4613 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} open
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4615 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} Header: [id, username, status, created_at, updated_at]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4620 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} Result: [1, shancun, 0, 2020-03-31 04:02:06.0, 2020-03-31 04:02:06.0]
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4625 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} closed
2020-03-30 20:21:15  [ http-nio-8080-exec-2:4626 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:21:16  [ http-nio-8080-exec-2:4765 ] - [ DEBUG ]  {conn-10001, pstmt-20003} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:21:16  [ http-nio-8080-exec-2:4770 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Parameters : [1, null, 1, 2020-03-30 20:02:06, 2020-03-30 20:02:06]
2020-03-30 20:21:16  [ http-nio-8080-exec-2:4771 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 20:21:16  [ http-nio-8080-exec-2:4814 ] - [ ERROR ]  {conn-10001, pstmt-20003} execute error. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
java.sql.SQLIntegrityConstraintViolationException: Column 'username' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy72.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.tccTryConfirm(UserCreateTransactionServiceImpl.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at TransactionService.prepare(TransactionService.java:104)
	at TccTransactionServiceImpl.prepare(TccTransactionServiceImpl.java:96)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:77)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$31a39ef.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:21:16  [ http-nio-8080-exec-2:4814 ] - [ ERROR ]  {conn-10001, pstmt-20003} execute error. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
java.sql.SQLIntegrityConstraintViolationException: Column 'username' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy72.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.tccTryConfirm(UserCreateTransactionServiceImpl.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at TransactionService.prepare(TransactionService.java:104)
	at TccTransactionServiceImpl.prepare(TccTransactionServiceImpl.java:96)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:77)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$31a39ef.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:21:16  [ http-nio-8080-exec-2:4835 ] - [ DEBUG ]  {conn-10001, pstmt-20003} clearParameters. 
2020-03-30 20:21:16  [ http-nio-8080-exec-2:4836 ] - [ DEBUG ]  {conn-10001, pstmt-20003} closed
2020-03-30 20:21:20  [ http-nio-8080-exec-2:9212 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 20:21:20  [ http-nio-8080-exec-2:9214 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33957 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33958 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33958 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33959 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.3319 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33959 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} open
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33960 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33960 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33961 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50003} closed
2020-03-30 20:21:45  [ http-nio-8080-exec-4:33961 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36737 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36738 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36740 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 3.228 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36741 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50004} open
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36742 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50004} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36743 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50004} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36747 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50004} closed
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36748 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36750 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [1]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36751 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36753 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 2.9504 millis. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36754 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} open
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36755 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} Header: [id, username, status, created_at, updated_at]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36756 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} Result: [1, shancun, 0, 2020-03-31 04:02:06.0, 2020-03-31 04:02:06.0]
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36759 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50005} closed
2020-03-30 20:21:48  [ http-nio-8080-exec-4:36760 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129534 ] - [ DEBUG ]  {conn-10001, pstmt-20004} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129535 ] - [ DEBUG ]  {conn-10001, pstmt-20004} Parameters : [1, null, 1, 2020-03-30 20:02:06, 2020-03-30 20:02:06]
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129536 ] - [ DEBUG ]  {conn-10001, pstmt-20004} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129538 ] - [ ERROR ]  {conn-10001, pstmt-20004} execute error. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
java.sql.SQLIntegrityConstraintViolationException: Column 'username' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy72.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.tccTryConfirm(UserCreateTransactionServiceImpl.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at TransactionService.prepare(TransactionService.java:104)
	at TccTransactionServiceImpl.prepare(TccTransactionServiceImpl.java:96)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:77)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$31a39ef.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129538 ] - [ ERROR ]  {conn-10001, pstmt-20004} execute error. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
java.sql.SQLIntegrityConstraintViolationException: Column 'username' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy67.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy71.saveOrUpdateUser(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy72.saveOrUpdateUser(Unknown Source)
	at UserCreateTransactionServiceImpl.tccTryConfirm(UserCreateTransactionServiceImpl.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at TransactionService.prepare(TransactionService.java:104)
	at TccTransactionServiceImpl.prepare(TccTransactionServiceImpl.java:96)
	at TccTransactionServiceImpl.runConfirm(TccTransactionServiceImpl.java:77)
	at TccTransactionServiceImpl$$FastClassBySpringCGLIB$$e9647f24.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at TccTransactionServiceImpl$$EnhancerBySpringCGLIB$$31a39ef.runConfirm(<generated>)
	at AccessController.run(AccessController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129540 ] - [ DEBUG ]  {conn-10001, pstmt-20004} clearParameters. 
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129541 ] - [ DEBUG ]  {conn-10001, pstmt-20004} closed
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129545 ] - [ DEBUG ]  {conn 10001} rollback
2020-03-30 20:23:20  [ http-nio-8080-exec-4:129545 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:23:20  [ SpringContextShutdownHook:129639 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 20:23:20  [ SpringContextShutdownHook:129640 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 20:23:20  [ SpringContextShutdownHook:129640 ] - [ DEBUG ]  {conn-10001, pstmt-20002} closed
2020-03-30 20:23:20  [ SpringContextShutdownHook:129641 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 20:23:57  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 20:23:57  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 20:23:57  [ http-nio-8080-exec-2:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:23:57  [ http-nio-8080-exec-2:41 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:23:57  [ http-nio-8080-exec-2:45 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1368]
2020-03-30 20:23:57  [ http-nio-8080-exec-2:45 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 20:23:57  [ http-nio-8080-exec-2:57 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 12.2073 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:23:57  [ http-nio-8080-exec-2:60 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-03-30 20:23:57  [ http-nio-8080-exec-2:61 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:23:57  [ http-nio-8080-exec-2:66 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:23:57  [ http-nio-8080-exec-2:99 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-03-30 20:23:57  [ http-nio-8080-exec-2:99 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9149 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9151 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1368]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9151 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9154 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 2.9845 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9159 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9160 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9162 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id": 1, "status": 0, "username": "shancun", "createdAt": "2020-03-30 20:02:06", "updatedAt": "2020-03-30 20:02:06"}, 20, null, null]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9165 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9165 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9167 ] - [ DEBUG ]  {conn-10001, pstmt-20002} created. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9168 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [1]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9169 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9174 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 5.2032 millis. select  
      id,username,status,created_at,updated_at
    from users
        where id = ?
        for update
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9175 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} open
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9176 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} Header: [id, username, status, created_at, updated_at]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9180 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} Result: [1, shancun, 0, 2020-03-31 04:02:06.0, 2020-03-31 04:02:06.0]
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9184 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50002} closed
2020-03-30 20:24:06  [ http-nio-8080-exec-2:9185 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9816 ] - [ DEBUG ]  {conn-10001, pstmt-20003} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9820 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Parameters : [1, shancun, 1, 2020-03-30 20:02:06, 2020-03-30 20:02:06]
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9821 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9824 ] - [ DEBUG ]  {conn-10001, pstmt-20003} executed. 4.4684 millis. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9826 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} open
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9827 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} Header: [GENERATED_KEY]
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9832 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} Result: [1]
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9835 ] - [ DEBUG ]  {conn-10001, pstmt-20003, rs-50003} closed
2020-03-30 20:24:07  [ http-nio-8080-exec-2:9836 ] - [ DEBUG ]  {conn-10001, pstmt-20003} clearParameters. 
2020-03-30 20:24:13  [ http-nio-8080-exec-2:16087 ] - [ DEBUG ]  {conn-10001, pstmt-20004} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:24:13  [ http-nio-8080-exec-2:16099 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"shancun\"}"
2020-03-30 20:24:13  [ http-nio-8080-exec-2:16165 ] - [ INFO ]  >>>> json handler string:{} <<<<{"id":1,"status":0,"username":"shancun","createdAt":"2020-03-30 20:02:06","updatedAt":"2020-03-30 20:02:06"}
2020-03-30 20:24:13  [ http-nio-8080-exec-2:16169 ] - [ DEBUG ]  {conn-10001, pstmt-20004} Parameters : [1368, 2, 20, user@user.tccTryCreate, "{\"username\":\"shancun\"}", {"id":1,"status":0,"username":"shancun","createdAt":"2020-03-30 20:02:06","updatedAt":"2020-03-30 20:02:06"}, 40, null]
2020-03-30 20:24:13  [ http-nio-8080-exec-2:16170 ] - [ DEBUG ]  {conn-10001, pstmt-20004} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:24:13  [ http-nio-8080-exec-2:16172 ] - [ DEBUG ]  {conn-10001, pstmt-20004} executed. 3.1365 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:24:13  [ http-nio-8080-exec-2:16173 ] - [ DEBUG ]  {conn-10001, pstmt-20004} clearParameters. 
2020-03-30 20:24:17  [ http-nio-8080-exec-2:19946 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 20:24:17  [ http-nio-8080-exec-2:19947 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:34:49  [ SpringContextShutdownHook:651833 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 20:34:49  [ SpringContextShutdownHook:651833 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 20:34:49  [ SpringContextShutdownHook:651833 ] - [ DEBUG ]  {conn-10001, pstmt-20002} closed
2020-03-30 20:34:49  [ SpringContextShutdownHook:651833 ] - [ DEBUG ]  {conn-10001, pstmt-20003} closed
2020-03-30 20:34:49  [ SpringContextShutdownHook:651833 ] - [ DEBUG ]  {conn-10001, pstmt-20004} closed
2020-03-30 20:34:49  [ SpringContextShutdownHook:651834 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 20:35:47  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 20:35:47  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 20:35:47  [ http-nio-8080-exec-2:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:35:47  [ http-nio-8080-exec-2:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:35:47  [ http-nio-8080-exec-2:48 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"suannai\"}"
2020-03-30 20:35:47  [ http-nio-8080-exec-2:49 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1369, 2, 20, user@user.tccTryCreate, "{\"username\":\"suannai\"}", null, 10, null]
2020-03-30 20:35:47  [ http-nio-8080-exec-2:50 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:35:47  [ http-nio-8080-exec-2:61 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 12.0912 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:35:47  [ http-nio-8080-exec-2:62 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:35:47  [ http-nio-8080-exec-2:65 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:35:47  [ http-nio-8080-exec-2:65 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1369]
2020-03-30 20:35:47  [ http-nio-8080-exec-2:65 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:35:47  [ http-nio-8080-exec-2:74 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 8.8436 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:35:47  [ http-nio-8080-exec-2:76 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-03-30 20:35:47  [ http-nio-8080-exec-2:78 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:35:47  [ http-nio-8080-exec-2:82 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [1369, 2, 20, user@user.tccTryCreate, "{\"username\":\"suannai\"}", null, 10, null, null]
2020-03-30 20:35:47  [ http-nio-8080-exec-2:108 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-03-30 20:35:47  [ http-nio-8080-exec-2:108 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4093 ] - [ DEBUG ]  {conn-10001, pstmt-20002} created. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4093 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [null, suannai, 0, 2020-03-30 20:35:47, 2020-03-30 20:35:47]
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4094 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER, VARCHAR, INTEGER, VARCHAR, VARCHAR]
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4096 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 2.7487 millis. insert into users
        ( 
        id,username,status,created_at,updated_at
     )
        values (
            ?,?,?,
            ?,?
        )
        on duplicate key update
        username=values(username),
        status=values(status)
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4097 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} open
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4097 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} Header: [GENERATED_KEY]
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4100 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} Result: [2]
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4100 ] - [ DEBUG ]  {conn-10001, pstmt-20002, rs-50001} closed
2020-03-30 20:35:51  [ http-nio-8080-exec-2:4101 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7558 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"suannai\"}"
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7581 ] - [ INFO ]  >>>> json handler string:{} <<<<{"createdAt":"2020-03-30 20:35:47","id":2,"status":0,"updatedAt":"2020-03-30 20:35:47","username":"suannai"}
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7582 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1369, 2, 20, user@user.tccTryCreate, "{\"username\":\"suannai\"}", {"createdAt":"2020-03-30 20:35:47","id":2,"status":0,"updatedAt":"2020-03-30 20:35:47","username":"suannai"}, 20, null]
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7582 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7594 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 11.973 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7594 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7597 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 20:35:54  [ http-nio-8080-exec-2:7597 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-30 20:42:15  [ SpringContextShutdownHook:387953 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-03-30 20:42:15  [ SpringContextShutdownHook:387953 ] - [ DEBUG ]  {conn-10001, pstmt-20002} closed
2020-03-30 20:42:15  [ SpringContextShutdownHook:387953 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-03-30 20:42:15  [ SpringContextShutdownHook:387954 ] - [ DEBUG ]  {conn-10001} closed
2020-03-30 20:42:59  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-03-30 20:42:59  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-03-30 20:42:59  [ http-nio-8080-exec-2:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-03-30 20:42:59  [ http-nio-8080-exec-2:34 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:42:59  [ http-nio-8080-exec-2:39 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [1369]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:39 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:47 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 8.7597 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-03-30 20:42:59  [ http-nio-8080-exec-2:50 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-03-30 20:42:59  [ http-nio-8080-exec-2:51 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:56 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Result: [1369, 2, 20, user@user.tccTryCreate, "{\"username\":\"suannai\"}", {"id": 2, "status": 0, "username": "suannai", "createdAt": "2020-03-30 20:35:47", "updatedAt": "2020-03-30 20:35:47"}, 20, null, null]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:81 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-03-30 20:42:59  [ http-nio-8080-exec-2:81 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-03-30 20:42:59  [ http-nio-8080-exec-2:83 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:42:59  [ http-nio-8080-exec-2:83 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [1369]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:83 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:84 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 1.2182 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
2020-03-30 20:42:59  [ http-nio-8080-exec-2:86 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-03-30 20:42:59  [ http-nio-8080-exec-2:87 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:87 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [1369, 2, 20, user@user.tccTryCreate, "{\"username\":\"suannai\"}", {"id": 2, "status": 0, "username": "suannai", "createdAt": "2020-03-30 20:35:47", "updatedAt": "2020-03-30 20:35:47"}, 20, null, null]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:88 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-03-30 20:42:59  [ http-nio-8080-exec-2:89 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-03-30 20:42:59  [ http-nio-8080-exec-2:90 ] - [ DEBUG ]  {conn-10001, pstmt-20002} created. delete from users where id = ?
2020-03-30 20:42:59  [ http-nio-8080-exec-2:90 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Parameters : [2]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:91 ] - [ DEBUG ]  {conn-10001, pstmt-20002} Types : [INTEGER]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:102 ] - [ DEBUG ]  {conn-10001, pstmt-20002} executed. 11.9107 millis. delete from users where id = ?
2020-03-30 20:42:59  [ http-nio-8080-exec-2:103 ] - [ DEBUG ]  {conn-10001, pstmt-20002} clearParameters. 
2020-03-30 20:42:59  [ http-nio-8080-exec-2:106 ] - [ DEBUG ]  {conn-10001, pstmt-20003} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:42:59  [ http-nio-8080-exec-2:113 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"suannai\"}"
2020-03-30 20:42:59  [ http-nio-8080-exec-2:135 ] - [ INFO ]  >>>> json handler string:{} <<<<{"id":2,"status":0,"username":"suannai","createdAt":"2020-03-30 20:35:47","updatedAt":"2020-03-30 20:35:47"}
2020-03-30 20:42:59  [ http-nio-8080-exec-2:136 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Parameters : [1369, 2, 20, user@user.tccTryCreate, "{\"username\":\"suannai\"}", {"id":2,"status":0,"username":"suannai","createdAt":"2020-03-30 20:35:47","updatedAt":"2020-03-30 20:35:47"}, -40, null]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:136 ] - [ DEBUG ]  {conn-10001, pstmt-20003} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-03-30 20:42:59  [ http-nio-8080-exec-2:138 ] - [ DEBUG ]  {conn-10001, pstmt-20003} executed. 2.3575 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-03-30 20:42:59  [ http-nio-8080-exec-2:139 ] - [ DEBUG ]  {conn-10001, pstmt-20003} clearParameters. 
2020-03-30 20:42:59  [ http-nio-8080-exec-2:142 ] - [ DEBUG ]  {conn-10001} commited
2020-03-30 20:42:59  [ http-nio-8080-exec-2:143 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-03-31 09:16:05  [ Druid-ConnectionPool-Destroy-963477514:45185908 ] - [ DEBUG ]  {conn-10001} closed
2020-04-02 17:23:02  [ main:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-02 17:23:02  [ main:4 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-02 17:23:02  [ main:18 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 17:23:02  [ main:44 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 17:23:02  [ main:49 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [23, user.create, 20, 10, null, null]
2020-04-02 17:23:02  [ main:49 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, TIMESTAMP, TIMESTAMP]
2020-04-02 17:23:02  [ main:52 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.555 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 17:23:02  [ main:232 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-04-02 17:23:02  [ main:235 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [GENERATED_KEY]
2020-04-02 17:23:02  [ main:241 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-04-02 17:23:02  [ main:242 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 17:23:02  [ main:244 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 17:23:02  [ main:246 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 17:23:02  [ main:249 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 17:23:02  [ main:250 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 17:23:02  [ main:251 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [23]
2020-04-02 17:23:02  [ main:252 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-02 17:23:02  [ main:253 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 2.6613 millis. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 17:23:02  [ main:254 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-04-02 17:23:02  [ main:254 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, topic, type, status, created_at, updated_at]
2020-04-02 17:23:02  [ main:260 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [23, user.create, 20, 10, null, null]
2020-04-02 17:23:02  [ main:262 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-04-02 17:23:02  [ main:263 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-02 17:23:02  [ main:264 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 17:23:02  [ main:265 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 17:23:02  [ main:266 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 17:23:02  [ main:267 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [23, user.create, 20, 20, null, null]
2020-04-02 17:23:02  [ main:267 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, TIMESTAMP, TIMESTAMP]
2020-04-02 17:23:02  [ main:271 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 4.0795 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 17:23:02  [ main:272 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} open
2020-04-02 17:23:02  [ main:272 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} Header: [GENERATED_KEY]
2020-04-02 17:23:02  [ main:273 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} closed
2020-04-02 17:23:02  [ main:274 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 17:23:02  [ main:275 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 17:23:02  [ main:275 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 17:23:02  [ SpringContextShutdownHook:441 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-02 17:23:02  [ SpringContextShutdownHook:441 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-02 17:23:02  [ SpringContextShutdownHook:444 ] - [ DEBUG ]  {conn-10001} closed
2020-04-02 17:27:11  [ main:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-02 17:27:11  [ main:8 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-02 17:27:11  [ main:36 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 17:27:12  [ main:98 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 17:27:12  [ main:110 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [24, user.create, 20, 10, 2020-04-02 17:27:11, 2020-04-02 17:27:11]
2020-04-02 17:27:12  [ main:111 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, VARCHAR, VARCHAR]
2020-04-02 17:27:12  [ main:147 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 37.3172 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 17:27:12  [ main:190 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-04-02 17:27:12  [ main:196 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [GENERATED_KEY]
2020-04-02 17:27:12  [ main:204 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-04-02 17:27:12  [ main:204 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 17:27:12  [ main:208 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 17:27:12  [ main:212 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 17:27:12  [ main:220 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 17:27:12  [ main:222 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 17:27:12  [ main:223 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [24]
2020-04-02 17:27:12  [ main:229 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-02 17:27:12  [ main:231 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 8.1197 millis. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 17:27:12  [ main:232 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-04-02 17:27:12  [ main:233 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, topic, type, status, created_at, updated_at]
2020-04-02 17:27:12  [ main:245 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [24, user.create, 20, 10, 2020-04-03 01:27:11.0, 2020-04-03 01:27:11.0]
2020-04-02 17:27:12  [ main:255 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-04-02 17:27:12  [ main:257 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-02 17:27:12  [ main:258 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 17:27:12  [ main:259 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 17:58:56  [ main:1904280 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 17:58:56  [ main:1904283 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [24, user.create, 20, 20, 2020-04-02 17:27:11, 2020-04-02 17:27:11]
2020-04-02 17:58:56  [ main:1904284 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, VARCHAR, VARCHAR]
2020-04-02 17:58:56  [ main:1904296 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.7234 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 17:58:56  [ main:1904298 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} open
2020-04-02 17:58:56  [ main:1904298 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} Header: [GENERATED_KEY]
2020-04-02 17:58:56  [ main:1904299 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} closed
2020-04-02 17:58:56  [ main:1904300 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 17:58:56  [ main:1904302 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 17:58:56  [ main:1904303 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 18:00:09  [ SpringContextShutdownHook:1977985 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-02 18:00:09  [ SpringContextShutdownHook:1977986 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-02 18:00:09  [ SpringContextShutdownHook:1977989 ] - [ DEBUG ]  {conn-10001} closed
2020-04-02 19:21:42  [ main:1 ] - [ DEBUG ]  {conn-10001} connected
2020-04-02 19:21:42  [ main:8 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-02 19:21:42  [ main:37 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 19:21:42  [ main:109 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 19:21:42  [ main:122 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [25, user.create, 20, 10, 2020-04-02 19:21:42, 2020-04-02 19:21:42]
2020-04-02 19:21:42  [ main:123 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, VARCHAR, VARCHAR]
2020-04-02 19:21:42  [ main:135 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.4037 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 19:21:42  [ main:185 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-04-02 19:21:43  [ main:191 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [GENERATED_KEY]
2020-04-02 19:21:43  [ main:201 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-04-02 19:21:43  [ main:202 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 19:21:43  [ main:205 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 19:21:43  [ main:210 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 19:21:43  [ main:220 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 19:21:43  [ main:222 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 19:21:43  [ main:223 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [25]
2020-04-02 19:21:43  [ main:229 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-02 19:21:43  [ main:232 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 9.0872 millis. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 19:21:43  [ main:233 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-04-02 19:21:43  [ main:234 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, topic, type, status, created_at, updated_at]
2020-04-02 19:21:43  [ main:247 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [25, user.create, 20, 10, 2020-04-03 03:21:42.0, 2020-04-03 03:21:42.0]
2020-04-02 19:21:43  [ main:256 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-04-02 19:21:43  [ main:257 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-02 19:21:43  [ main:259 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 19:21:43  [ main:260 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 19:22:13  [ main:30618 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 19:22:13  [ main:30620 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [25, user.create, 20, 20, 2020-04-02 19:21:42, 2020-04-02 19:21:42]
2020-04-02 19:22:13  [ main:30620 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, VARCHAR, VARCHAR]
2020-04-02 19:22:13  [ main:30632 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 13.4269 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 19:22:13  [ main:30634 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} open
2020-04-02 19:22:13  [ main:30634 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} Header: [GENERATED_KEY]
2020-04-02 19:22:13  [ main:30635 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} closed
2020-04-02 19:22:13  [ main:30636 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 19:22:13  [ main:30638 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 19:22:13  [ main:30639 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 19:23:06  [ SpringContextShutdownHook:83962 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-02 19:23:06  [ SpringContextShutdownHook:83964 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-02 19:23:06  [ SpringContextShutdownHook:83969 ] - [ DEBUG ]  {conn-10001} closed
2020-04-02 20:09:08  [ main:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-02 20:09:08  [ main:4 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-02 20:09:08  [ main:19 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 20:09:08  [ main:53 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 20:09:08  [ main:267 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [26, user.create, 20, 10, 2020-04-02 20:09:08, 2020-04-02 20:09:08]
2020-04-02 20:09:08  [ main:267 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, VARCHAR, VARCHAR]
2020-04-02 20:09:08  [ main:275 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 8.1217 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 20:09:08  [ main:300 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} open
2020-04-02 20:09:08  [ main:304 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} Header: [GENERATED_KEY]
2020-04-02 20:09:08  [ main:312 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50000} closed
2020-04-02 20:09:08  [ main:313 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 20:09:08  [ main:316 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 20:09:08  [ main:318 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 20:09:08  [ main:321 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 20:09:08  [ main:322 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 20:09:08  [ main:323 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [26]
2020-04-02 20:09:08  [ main:325 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-02 20:09:08  [ main:328 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 5.2856 millis. select id,topic,type,status,created_at,updated_at from yimq_messages
        where id = ?
        for update
2020-04-02 20:09:08  [ main:330 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} open
2020-04-02 20:09:08  [ main:331 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Header: [id, topic, type, status, created_at, updated_at]
2020-04-02 20:09:08  [ main:338 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} Result: [26, user.create, 20, 10, 2020-04-03 04:09:08.0, 2020-04-03 04:09:08.0]
2020-04-02 20:09:08  [ main:342 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50001} closed
2020-04-02 20:09:08  [ main:344 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-02 20:09:08  [ main:346 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 20:09:08  [ main:347 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 20:09:08  [ main:348 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-02 20:09:08  [ main:349 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [26, user.create, 20, 20, 2020-04-02 20:09:08, 2020-04-02 20:09:08]
2020-04-02 20:09:08  [ main:349 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, VARCHAR, INTEGER, INTEGER, VARCHAR, VARCHAR]
2020-04-02 20:09:09  [ main:352 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.2484 millis. insert into yimq_messages
        ( 
        id,topic,type,status,created_at,updated_at
     )
        values (
            ?,?,?,?,
            ?,?
        )
        on duplicate key update
        status=values(status)
2020-04-02 20:09:09  [ main:353 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} open
2020-04-02 20:09:09  [ main:353 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} Header: [GENERATED_KEY]
2020-04-02 20:09:09  [ main:354 ] - [ DEBUG ]  {conn-10001, pstmt-20000, rs-50002} closed
2020-04-02 20:09:09  [ main:354 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-02 20:09:09  [ main:356 ] - [ DEBUG ]  {conn-10001} commited
2020-04-02 20:09:09  [ main:356 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-02 20:09:09  [ SpringContextShutdownHook:579 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-02 20:09:09  [ SpringContextShutdownHook:583 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-02 20:09:09  [ SpringContextShutdownHook:596 ] - [ DEBUG ]  {conn-10001} closed
2020-04-07 14:33:05  [ http-nio-8080-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-07 14:33:05  [ http-nio-8080-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-07 14:33:05  [ http-nio-8080-exec-2:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 14:33:05  [ http-nio-8080-exec-2:18 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 14:33:05  [ http-nio-8080-exec-2:27 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 14:33:05  [ http-nio-8080-exec-2:28 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [345, 2, 30, user@user.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 14:33:05  [ http-nio-8080-exec-2:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 14:33:05  [ http-nio-8080-exec-2:43 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 14.4384 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 14:33:05  [ http-nio-8080-exec-2:43 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 14:33:05  [ http-nio-8080-exec-2:46 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 14:33:05  [ http-nio-8080-exec-2:48 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 14:33:05  [ http-nio-8080-exec-2:51 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 14:33:05  [ http-nio-8080-exec-2:51 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 14:33:05  [ http-nio-8080-exec-2:52 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [345]
2020-04-07 14:33:05  [ http-nio-8080-exec-2:52 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-07 14:33:05  [ http-nio-8080-exec-2:60 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 8.0653 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 14:33:05  [ http-nio-8080-exec-2:63 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-04-07 14:33:05  [ http-nio-8080-exec-2:65 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-04-07 14:33:05  [ http-nio-8080-exec-2:69 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [345, 2, 30, user@user.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null, null]
2020-04-07 14:33:05  [ http-nio-8080-exec-2:85 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-04-07 14:33:05  [ http-nio-8080-exec-2:85 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-07 14:33:05  [ http-nio-8080-exec-2:86 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 14:33:05  [ http-nio-8080-exec-2:86 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:32:22  [ http-nio-8081-exec-4:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-07 16:32:22  [ http-nio-8081-exec-4:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-07 16:32:22  [ http-nio-8081-exec-4:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:32:22  [ http-nio-8081-exec-4:20 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:32:22  [ http-nio-8081-exec-4:27 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:32:22  [ http-nio-8081-exec-4:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [23456, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:32:22  [ http-nio-8081-exec-4:29 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:32:22  [ http-nio-8081-exec-4:33 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 4.1386 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:32:22  [ http-nio-8081-exec-4:34 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:32:22  [ http-nio-8081-exec-4:37 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:32:22  [ http-nio-8081-exec-4:39 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:32:22  [ http-nio-8081-exec-4:43 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:32:22  [ http-nio-8081-exec-4:43 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:32:22  [ http-nio-8081-exec-4:43 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [23456]
2020-04-07 16:32:22  [ http-nio-8081-exec-4:43 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-07 16:32:22  [ http-nio-8081-exec-4:55 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 11.9919 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:32:22  [ http-nio-8081-exec-4:58 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-04-07 16:32:22  [ http-nio-8081-exec-4:60 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-04-07 16:32:22  [ http-nio-8081-exec-4:64 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [23456, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null, null]
2020-04-07 16:32:22  [ http-nio-8081-exec-4:80 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-04-07 16:32:22  [ http-nio-8081-exec-4:81 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-07 16:32:22  [ http-nio-8081-exec-4:82 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:32:22  [ http-nio-8081-exec-4:82 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:35:13  [ SpringContextShutdownHook:170365 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-07 16:35:13  [ SpringContextShutdownHook:170366 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-07 16:35:13  [ SpringContextShutdownHook:170367 ] - [ DEBUG ]  {conn-10001} closed
2020-04-07 16:35:26  [ http-nio-8081-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-07 16:35:26  [ http-nio-8081-exec-2:1 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-07 16:35:26  [ http-nio-8081-exec-2:5 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:35:26  [ http-nio-8081-exec-2:22 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:35:26  [ http-nio-8081-exec-2:36 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:35:26  [ http-nio-8081-exec-2:37 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [23456, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:35:26  [ http-nio-8081-exec-2:37 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:35:26  [ http-nio-8081-exec-2:38 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.502 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:35:26  [ http-nio-8081-exec-2:39 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:35:26  [ http-nio-8081-exec-2:40 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:35:26  [ http-nio-8081-exec-2:41 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:35:26  [ http-nio-8081-exec-2:46 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:35:26  [ http-nio-8081-exec-2:47 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:35:26  [ http-nio-8081-exec-2:47 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [23456]
2020-04-07 16:35:26  [ http-nio-8081-exec-2:47 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-07 16:35:26  [ http-nio-8081-exec-2:55 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 7.7689 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:35:26  [ http-nio-8081-exec-2:58 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-04-07 16:35:26  [ http-nio-8081-exec-2:61 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-04-07 16:35:26  [ http-nio-8081-exec-2:66 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [23456, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null, null]
2020-04-07 16:35:26  [ http-nio-8081-exec-2:93 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-04-07 16:35:26  [ http-nio-8081-exec-2:94 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-07 16:35:26  [ http-nio-8081-exec-2:96 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:35:26  [ http-nio-8081-exec-2:97 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43129 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43131 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43131 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [23456, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43131 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43133 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.8346 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43133 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43134 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:36:09  [ http-nio-8081-exec-4:43135 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43779 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43779 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43780 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [23456, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43780 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43781 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 1.1382 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43781 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43782 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:36:10  [ http-nio-8081-exec-6:43782 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57675 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57676 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57676 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [574, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57677 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57678 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 2.0467 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57679 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57680 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:36:24  [ http-nio-8081-exec-8:57681 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:39:10  [ SpringContextShutdownHook:224331 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-07 16:39:10  [ SpringContextShutdownHook:224331 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-07 16:39:10  [ SpringContextShutdownHook:224331 ] - [ DEBUG ]  {conn-10001} closed
2020-04-07 16:50:52  [ http-nio-8081-exec-3:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-07 16:50:52  [ http-nio-8081-exec-3:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-07 16:50:52  [ http-nio-8081-exec-3:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:50:52  [ http-nio-8081-exec-3:22 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:50:52  [ http-nio-8081-exec-3:34 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:50:52  [ http-nio-8081-exec-3:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [13563, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:50:52  [ http-nio-8081-exec-3:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:50:52  [ http-nio-8081-exec-3:39 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.7705 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:50:52  [ http-nio-8081-exec-3:40 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:50:52  [ http-nio-8081-exec-3:41 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:50:52  [ http-nio-8081-exec-3:42 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:50:52  [ http-nio-8081-exec-3:47 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:50:52  [ http-nio-8081-exec-3:48 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:50:52  [ http-nio-8081-exec-3:48 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [13563]
2020-04-07 16:50:52  [ http-nio-8081-exec-3:48 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-07 16:50:52  [ http-nio-8081-exec-3:57 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 8.4432 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:50:52  [ http-nio-8081-exec-3:62 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-04-07 16:50:52  [ http-nio-8081-exec-3:65 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-04-07 16:50:52  [ http-nio-8081-exec-3:71 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [13563, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null, null]
2020-04-07 16:50:52  [ http-nio-8081-exec-3:99 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-04-07 16:50:52  [ http-nio-8081-exec-3:100 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-07 16:50:52  [ http-nio-8081-exec-3:101 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:50:52  [ http-nio-8081-exec-3:101 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:52:28  [ SpringContextShutdownHook:96428 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-07 16:52:28  [ SpringContextShutdownHook:96428 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-07 16:52:28  [ SpringContextShutdownHook:96429 ] - [ DEBUG ]  {conn-10001} closed
2020-04-07 16:52:56  [ http-nio-8081-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-07 16:52:56  [ http-nio-8081-exec-2:2 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-07 16:52:56  [ http-nio-8081-exec-2:6 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:52:56  [ http-nio-8081-exec-2:19 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:52:56  [ http-nio-8081-exec-2:31 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:52:56  [ http-nio-8081-exec-2:33 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [13563, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:52:56  [ http-nio-8081-exec-2:33 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:52:56  [ http-nio-8081-exec-2:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.057 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:52:56  [ http-nio-8081-exec-2:36 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:52:56  [ http-nio-8081-exec-2:37 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:52:56  [ http-nio-8081-exec-2:38 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:52:56  [ http-nio-8081-exec-2:40 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:52:56  [ http-nio-8081-exec-2:41 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:52:56  [ http-nio-8081-exec-2:41 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [13563]
2020-04-07 16:52:56  [ http-nio-8081-exec-2:41 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-07 16:52:56  [ http-nio-8081-exec-2:50 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 8.9944 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:52:56  [ http-nio-8081-exec-2:53 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-04-07 16:52:56  [ http-nio-8081-exec-2:55 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-04-07 16:52:56  [ http-nio-8081-exec-2:58 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [13563, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null, null]
2020-04-07 16:52:56  [ http-nio-8081-exec-2:82 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-04-07 16:52:56  [ http-nio-8081-exec-2:83 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-07 16:52:56  [ http-nio-8081-exec-2:84 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:52:56  [ http-nio-8081-exec-2:84 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:53:55  [ http-nio-8081-exec-2:0 ] - [ DEBUG ]  {conn-10001} connected
2020-04-07 16:53:55  [ http-nio-8081-exec-2:3 ] - [ DEBUG ]  {conn-10001} setAutoCommit false
2020-04-07 16:53:55  [ http-nio-8081-exec-2:9 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:53:55  [ http-nio-8081-exec-2:40 ] - [ DEBUG ]  {conn-10001, pstmt-20000} created. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:53:55  [ http-nio-8081-exec-2:73 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:53:55  [ http-nio-8081-exec-2:78 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [13563, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null]
2020-04-07 16:53:55  [ http-nio-8081-exec-2:79 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:53:55  [ http-nio-8081-exec-2:81 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 3.8312 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:53:55  [ http-nio-8081-exec-2:83 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:53:55  [ http-nio-8081-exec-2:84 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:53:55  [ http-nio-8081-exec-2:86 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:53:55  [ http-nio-8081-exec-2:94 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:53:55  [ http-nio-8081-exec-2:95 ] - [ DEBUG ]  {conn-10001, pstmt-20001} created. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:53:55  [ http-nio-8081-exec-2:95 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Parameters : [13563]
2020-04-07 16:53:55  [ http-nio-8081-exec-2:96 ] - [ DEBUG ]  {conn-10001, pstmt-20001} Types : [INTEGER]
2020-04-07 16:53:55  [ http-nio-8081-exec-2:115 ] - [ DEBUG ]  {conn-10001, pstmt-20001} executed. 19.2623 millis. select  
       id,message_id,type,processor,data,try_result,status,created_at,updated_at
    from yimq_processes
        where id = ?
        for update
2020-04-07 16:53:55  [ http-nio-8081-exec-2:120 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} open
2020-04-07 16:53:55  [ http-nio-8081-exec-2:124 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Header: [id, message_id, type, processor, data, try_result, status, created_at, updated_at]
2020-04-07 16:53:55  [ http-nio-8081-exec-2:133 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} Result: [13563, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 10, null, null]
2020-04-07 16:53:55  [ http-nio-8081-exec-2:172 ] - [ DEBUG ]  {conn-10001, pstmt-20001, rs-50000} closed
2020-04-07 16:53:55  [ http-nio-8081-exec-2:173 ] - [ DEBUG ]  {conn-10001, pstmt-20001} clearParameters. 
2020-04-07 16:53:55  [ http-nio-8081-exec-2:174 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:53:55  [ http-nio-8081-exec-2:174 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:54:10  [ http-nio-8081-exec-2:15040 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18701 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18702 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18703 ] - [ DEBUG ]  {conn-10001} pool-connect
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18704 ] - [ INFO ]  >>>> json handler string:{} <<<<"{\"username\":\"zhenglei1\",\"status\":10}"
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18704 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Parameters : [13563, 2, 30, finance@account.create, "{\"username\":\"zhenglei1\",\"status\":10}", null, 40, null]
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18704 ] - [ DEBUG ]  {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR, INTEGER, TIMESTAMP]
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18716 ] - [ DEBUG ]  {conn-10001, pstmt-20000} executed. 11.356 millis. insert into yimq_processes 
        ( 
        id,message_id,type,processor,data,try_result,status,created_at
     )
        values (
            ?,?,?,?,
            ?,
            ?,
            ?,?
        )
        on duplicate key update
        status=values(status),
        try_result=values(try_result)
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18716 ] - [ DEBUG ]  {conn-10001, pstmt-20000} clearParameters. 
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18717 ] - [ DEBUG ]  {conn-10001} commited
2020-04-07 16:54:14  [ http-nio-8081-exec-2:18718 ] - [ DEBUG ]  {conn-10001} pool-recycle
2020-04-07 16:54:49  [ SpringContextShutdownHook:54019 ] - [ DEBUG ]  {conn-10001, pstmt-20001} closed
2020-04-07 16:54:49  [ SpringContextShutdownHook:54019 ] - [ DEBUG ]  {conn-10001, pstmt-20000} closed
2020-04-07 16:54:49  [ SpringContextShutdownHook:54020 ] - [ DEBUG ]  {conn-10001} closed
